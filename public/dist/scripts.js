"use strict";$(function(){$(document).foundation(),$(".screenText").slick({dots:!0,infinite:!0,speed:500,fade:!0,cssEase:"linear"}),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat");$(window).width()<400?($(".menuDiv").addClass("menuMode"),$("#user-menu").removeClass("show")):($("#user-menu").removeClass("show"),$("#user-menu").css("width","180px"),$(".close-icon").remove(),$(".menuDiv").removeClass("menuMode"))}),$("#login").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userPassword").val();if(0!==o.length&&0!==a.length){var i=/^[a-zA-Z0-9._]{1,30}$/.test(o);i?$.post("/login",{username:o,password:a}).fail(function(e){var s=e.responseJSON;400===e.status&&r(s[0].msg,"error"),401===e.status&&r(s.msg,"error")}).done(function(e){window.location.href="/user/home"}):(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#email").val();if(0!==o.length&&0!==a.length){var i=/^[a-zA-Z0-9._]{1,30}$/.test(o);i?$.post("/user/editProfile",{username:o,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(o){o.preventDefault(),s();var a=$("#username").val();0!==a.length?$.post("/verifyUser",{username:a}).fail(function(e){if(401===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(s){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),e=s}):0===a.length&&(n("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(o){o.preventDefault(),s();var a=$("#newPassword").val(),i=$("#confirmPassword").val();0===a.length&&(n("newPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&i!==a&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with the new password","error"));0!==a.length&&0!==i.length&&a===i&&$.post("/forgotPassword",{newPassword:a,user:e}).fail(function(e){if(400===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userEmail").val(),i=$("#userPassword").val(),t=$("#confirmPassword").val(),l=/^[a-zA-Z0-9._]{1,30}$/.test(o);0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide"));l||(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"));0===a.length&&(n("userEmail"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==i.length&&0!==t.length&&t!==i&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),showError("Confirm password doesn't match with password","error"));0!==o.length&&0!==i.length&&0!==t.length&&0!==a.length&&$.post("/signup",{username:o,password:i,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",s),$("#changePassword").on("submit",function(e){e.preventDefault(),s();var o=$("#oldPassword").val(),a=$("#newPassword").val(),i=$("#confirmPassword").val();0===a.length&&(n("newPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&i!==a&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with the new password","error"));0!==a.length&&0!==i.length&&a===i&&$.post("/user/changePassword",{oldPassword:o,newPassword:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#searchIcon").on("click",function(e){e.preventDefault(),$("#headerDiv").removeClass("show").addClass("hide"),$("#search").addClass("show")}),$(".js-search-close").on("click",function(e){e.preventDefault(),$("#headerDiv").removeClass("hide").addClass("show"),$("#search").removeClass("show")}),$(".menuDiv").on("click",function(e){e.preventDefault(),$("#user-menu").hasClass("show")?$("#user-menu").removeClass("show"):$("#user-menu").addClass("show")}),$(document).on("click",".menuMode",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").addClass("show"),s.css("width","250px"),s.prepend('<div class="close-icon"><i class="fi-x"></i></div>')}),$(document).on("click",".close-icon",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").removeClass("show"),s.css("width","180px"),$(".close-icon").remove()});var e=null;function s(){$("#error").empty(),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function r(e,s){var r=$("#msgcont");0===r.length&&(r=$("<ul id='msgcont'></ul>")),r.append("<li>"+e+"</li>"),$("#"+s).html(r)}function n(e){var s=$("#"+e),r=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");s.after(r)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwiZm91bmRhdGlvbiIsImRvdHMiLCJpbmZpbml0ZSIsInNwZWVkIiwid2luZG93Iiwib24iLCJpcyIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJ3aWR0aCIsImNzcyIsInJlbW92ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNsZWFyTWVzc2FnZSIsIm5hbWUiLCJ2YWwiLCJwd2QiLCJsZW5ndGgiLCJuYW1lVmVyaWZpZXMiLCJ0ZXN0IiwicG9zdCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJmYWlsIiwicmVzcG9uc2VUZXh0IiwiZGF0YSIsInJlc3BvbnNlSlNPTiIsInNob3dNZXNzYWdlIiwibXNnIiwiZG9uZSIsImxvY2F0aW9uIiwiaHJlZiIsInNob3dFcnJvckNpcmNsZSIsImVtYWlsIiwicGF0dGVybiIsInN0YXR1cyIsImhhbmRsZVZlcmlmeVVzZXIiLCJ1c2VyIiwibmV3UHdkIiwiY29uZmlybVB3ZCIsIm5ld1Bhc3N3b3JkIiwiaGFuZGxlQ2hhbmdlUGFzc3dvcmQiLCJvbGRQd2QiLCJjb25maXJtcHdkIiwic2hvd0Vycm9yIiwiaGlkZVNlYXJjaEJhciIsInNob3dVc2VyTWVudUQiLCJvbGRQYXNzd29yZCIsImhhbmRsZVNpZ25VcCIsInVzZXJOYW1lUmVnZXgiLCJ1c2VySWNvbiIsImhhc0NsYXNzIiwicHJlcGVuZCIsInVsRWxlIiwiYXBwZW5kIiwibXNnVHh0IiwiaHRtbCIsImVtcHR5IiwibXNnRGl2IiwiY2lyY2xlSW5wIiwiaW5wRWxlIiwic3BhbkVsZSIsImFmdGVyIl0sIm1hcHBpbmdzIjoiYUFBQUEsRUFBRSxXQUlBQSxFQUFFQyxVQUFVQyxhQUFaRixFQUFFQyxlQUFVQyxPQUdWQyxNQUFNLEVBRE5DLFVBQUEsRUFDQUQsTUFBTSxJQUNOQyxNQUFBQSxFQUNBQyxRQUFPLFdBUVRMLEVBQUVNLFFBQVFDLEdBQUcsY0FtQmIsV0FDbUJQLEVBQUEsV0FDYkEsRUFBRSxj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WSxJQUFBLFFBQWVDLFNBQ2xCd0MsRUFBQUUsUUFBQSx3REFuWER2RCxFQUFFQyxVQUFGTSxHQUFjQSxRQUFkLGNBc1hFLFNBQWNPLEdBQ2RBLEVBQUFDLGlCQUNFeUMsSUFBQUEsRUFBVXhELEVBQUEsY0FDWEEsRUFBQSxjQUFBUyxZQUFBLFFBQ0QrQyxFQUFNQyxJQUFPLFFBQVNDLFNBQ3RCMUQsRUFBRSxlQUFjMkQsV0F0WGxCLElBQUluQixFQUFPLEtBeVdYLFNBQVN4QixJQUNQaEIsRUFBRSxVQUFVNEQsUUFDWjVELEVBQUUsUUFBUTRELFFBQ1Y1RCxFQUFFLGdCQUFnQlUsU0FBUyxRQUMzQlYsRUFBRSxlQUFlYSxTQUduQixTQUFTaUIsRUFBWTRCLEVBQVFHLEdBQzNCLElBQUlMLEVBQVF4RCxFQUFFLFlBQ08sSUFBakJ3RCxFQUFNcEMsU0FDUm9DLEVBQVF4RCxFQUFFLDJCQUVad0QsRUFBTUMsT0FBTyxPQUFTQyxFQUFTLFNBQy9CMUQsRUFBRSxJQUFNNkQsR0FBUUYsS0FBS0gsR0FHdkIsU0FBU3JCLEVBQWdCMkIsR0FDdkIsSUFBTUMsRUFBUy9ELEVBQUUsSUFBTThELEdBQ2pCRSxFQUFVaEUsRUFBRSwrREFDbEIrRCxFQUFPRSxNQUFNRCxJQTVaZiIsImZpbGUiOiJzY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChmdW5jdGlvbigpIHtcbiAgLyoqXG4gICAqIEluaXRpYWxpemUgZm91bmRhdGlvblxuICAgKi9cbiAgJChkb2N1bWVudCkuZm91bmRhdGlvbigpO1xuXG4gICQoJy5zY3JlZW5UZXh0Jykuc2xpY2soe1xuICAgIGRvdHM6IHRydWUsXG4gICAgaW5maW5pdGU6IHRydWUsXG4gICAgc3BlZWQ6IDUwMCxcbiAgICBmYWRlOiB0cnVlLFxuICAgIGNzc0Vhc2U6ICdsaW5lYXInXG4gIH0pO1xuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBmdW5jdGlvbnNcbiAgICovXG4gICQod2luZG93KS5vbignbG9hZCByZXNpemUnLCBoYW5kbGVMb2FkKTtcbiAgJCgnI2xvZ2luJykub24oJ3N1Ym1pdCcsIGhhbmRsZUxvZ2luKTsgLyogb24gbG9naW4gKi9cbiAgJCgnI2VkaXRQcm9maWxlJykub24oJ3N1Ym1pdCcsIGhhbmRsZVVwZGF0ZVByb2ZpbGUpOyAvKiB1cGRhdGUgcHJvZmlsZSAqL1xuICAkKCcjY29uZmlybVVzZXInKS5vbignc3VibWl0JywgaGFuZGxlVmVyaWZ5VXNlcik7IC8qIHZlcmlmeSB1c2VyICovXG4gICQoJyNmb3Jnb3RQYXNzd29yZCcpLm9uKCdzdWJtaXQnLCBoYW5kbGVVcGRhdGVQYXNzd29yZCk7IC8qIHBvc3QgdXBkYXRlIHBhc3N3b3JkICovXG4gICQoJyNzaWdudXAnKS5vbignc3VibWl0JywgaGFuZGxlU2lnblVwKTsgLyogU2lnbiB1cCAqL1xuICAkKCcjcmVzZXQnKS5vbignY2xpY2snLCBjbGVhck1lc3NhZ2UpOyAvKiBDbGVhciBtZXNzYWdlcyBvbiBjbGljayBvZiByZXNldCAqL1xuICAkKCcjY2hhbmdlUGFzc3dvcmQnKS5vbignc3VibWl0JywgaGFuZGxlQ2hhbmdlUGFzc3dvcmQpOyAvKiBwb3N0IGNoYW5nZSBwYXNzd29yZCAqL1xuICAkKCcjc2VhcmNoSWNvbicpLm9uKCdjbGljaycsIGRpc3BsYXlTZWFyY2hCYXIpO1xuICAkKCcuanMtc2VhcmNoLWNsb3NlJykub24oJ2NsaWNrJywgaGlkZVNlYXJjaEJhcik7XG4gICQoJy5tZW51RGl2Jykub24oJ2NsaWNrJywgc2hvd1VzZXJNZW51RCk7XG4gICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcubWVudU1vZGUnLCBzaG93VXNlck1lbnUpO1xuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNsb3NlLWljb24nLCBoaWRlVXNlck1lbnUpO1xuXG5cbiAgdmFyIHVzZXIgPSBudWxsO1xuXG5cbiAgLyogZnVuY3Rpb25zICovXG4gIGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgY29uc3QgZm9vdGVyID0gJCgnI2Zvb3RlcicpO1xuICAgIGlmICgkKCcudGl0bGUtYmFyJykuaXMoJzp2aXNpYmxlJykpIHtcbiAgICAgICQoJyNpbmRleC1tZW51JykucmVtb3ZlQ2xhc3MoJ2FkZEZsb2F0Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJyNpbmRleC1tZW51JykuYWRkQ2xhc3MoJ2FkZEZsb2F0Jyk7XG4gICAgfVxuXG4gICAgdmFyIHdpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgaWYgKHdpZHRoIDwgNDAwKSB7XG4gICAgICAkKCcubWVudURpdicpLmFkZENsYXNzKCdtZW51TW9kZScpO1xuICAgICAgJCgnI3VzZXItbWVudScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJyN1c2VyLW1lbnUnKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgJCgnI3VzZXItbWVudScpLmNzcygnd2lkdGgnLCAnMTgwcHgnKTtcbiAgICAgICQoJy5jbG9zZS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAkKCcubWVudURpdicpLnJlbW92ZUNsYXNzKCdtZW51TW9kZScpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUxvZ2luKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY2xlYXJNZXNzYWdlKCk7XG4gICAgY29uc3QgbmFtZSA9ICQoJyN1c2VyTmFtZScpLnZhbCgpO1xuICAgIGNvbnN0IHB3ZCA9ICQoJyN1c2VyUGFzc3dvcmQnKS52YWwoKTtcblxuICAgIGlmIChuYW1lLmxlbmd0aCAhPT0gMCAmJiBwd2QubGVuZ3RoICE9PSAwKSB7XG4gICAgICBjb25zdCB1c2VyTmFtZVJlZ2V4ID0gL15bYS16QS1aMC05Ll9dezEsMzB9JC87XG4gICAgICBjb25zdCBuYW1lVmVyaWZpZXMgPSB1c2VyTmFtZVJlZ2V4LnRlc3QobmFtZSk7XG5cbiAgICAgIGlmIChuYW1lVmVyaWZpZXMpIHtcbiAgICAgICAgJC5wb3N0KCcvbG9naW4nLCB7XG4gICAgICAgICAgICB1c2VybmFtZTogbmFtZSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiBwd2RcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGRhdGEucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSA0MDApIHtcbiAgICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0WzBdLm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHQubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy91c2VyL2hvbWUnO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VyTmFtZScpO1xuICAgICAgICBzaG93TWVzc2FnZSgnVXNlcm5hbWVzIGNhbiBvbmx5IHVzZSBsZXR0ZXJzLCBudW1iZXJzLCB1bmRlcnNjb3JlcyBhbmQgcGVyaW9kcy4nLCAnZXJyb3InKTtcblxuICAgICAgfVxuICAgIH0gZWxzZSB7XG5cbiAgICAgIGlmIChuYW1lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJOYW1lJyk7XG4gICAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgICBpZiAocHdkLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlclBhc3N3b3JkJyk7XG4gICAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlVXBkYXRlUHJvZmlsZShlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY2xlYXJNZXNzYWdlKCk7XG5cbiAgICBjb25zdCB1c2VybmFtZSA9ICQoJyN1c2VyTmFtZScpLnZhbCgpO1xuICAgIGNvbnN0IGVtYWlsID0gJCgnI2VtYWlsJykudmFsKCk7XG5cbiAgICBpZiAodXNlcm5hbWUubGVuZ3RoICE9PSAwICYmIGVtYWlsLmxlbmd0aCAhPT0gMCkge1xuXG4gICAgICBjb25zdCBwYXR0ZXJuID0gL15bYS16QS1aMC05Ll9dezEsMzB9JC87XG4gICAgICBjb25zdCBuYW1lVmVyaWZpZXMgPSBwYXR0ZXJuLnRlc3QodXNlcm5hbWUpO1xuICAgICAgaWYgKG5hbWVWZXJpZmllcykge1xuICAgICAgICAkLnBvc3QoJy91c2VyL2VkaXRQcm9maWxlJywge1xuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgZW1haWw6IGVtYWlsXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMCkge1xuICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVRleHQgPSBkYXRhLnJlc3BvbnNlSlNPTjtcbiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlVGV4dC5sZW5ndGggPj0gMSkge1xuICAgICAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dFswXS5tc2csICdlcnJvcicpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dC5tc2csICdlcnJvcicpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBzaG93TWVzc2FnZShkYXRhLm1zZywgJ21zZycpO1xuICAgICAgICAgICAgJCgnI2xvZ2luTGluaycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAkKCcuYnRucycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJOYW1lJyk7XG4gICAgICAgIHNob3dNZXNzYWdlKCdVc2VybmFtZXMgY2FuIG9ubHkgdXNlIGxldHRlcnMsIG51bWJlcnMsIHVuZGVyc2NvcmVzIGFuZCBwZXJpb2RzLicsICdlcnJvcicpO1xuXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh1c2VybmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VyTmFtZScpO1xuICAgICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgfVxuICAgICAgaWYgKGVtYWlsLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHNob3dFcnJvckNpcmNsZSgnZW1haWwnKTtcbiAgICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVWZXJpZnlVc2VyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjbGVhck1lc3NhZ2UoKTtcblxuICAgIGNvbnN0IHVzZXJuYW1lID0gJCgnI3VzZXJuYW1lJykudmFsKCk7XG5cbiAgICBpZiAodXNlcm5hbWUubGVuZ3RoICE9PSAwKSB7XG5cbiAgICAgICQucG9zdCgnL3ZlcmlmeVVzZXInLCB7XG4gICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lXG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHQubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAkKCcjdXNlcm5hbWUnKS52YWwoJycpO1xuICAgICAgICAgICQoJyNmb3Jnb3RQYXNzd29yZCcpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgJCgnI2NvbmZpcm1Vc2VyJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICB1c2VyID0gZGF0YTtcbiAgICAgICAgfSk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHVzZXJuYW1lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJuYW1lJyk7XG4gICAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlVXBkYXRlUGFzc3dvcmQoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjbGVhck1lc3NhZ2UoKTtcblxuICAgIGNvbnN0IG5ld1B3ZCA9ICQoJyNuZXdQYXNzd29yZCcpLnZhbCgpO1xuICAgIGNvbnN0IGNvbmZpcm1Qd2QgPSAkKCcjY29uZmlybVBhc3N3b3JkJykudmFsKCk7XG5cbiAgICBpZiAobmV3UHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCduZXdQYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlybVB3ZC5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnY29uZmlybVBhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmIChuZXdQd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1Qd2QgIT09IG5ld1B3ZCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCdjb25maXJtUGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICBzaG93TWVzc2FnZSgnQ29uZmlybSBwYXNzd29yZCBkb2VzblxcJ3QgbWF0Y2ggd2l0aCB0aGUgbmV3IHBhc3N3b3JkJywgJ2Vycm9yJyk7XG4gICAgfVxuXG4gICAgaWYgKG5ld1B3ZC5sZW5ndGggIT09IDAgJiYgY29uZmlybVB3ZC5sZW5ndGggIT09IDAgJiYgbmV3UHdkID09PSBjb25maXJtUHdkKSB7XG4gICAgICAkLnBvc3QoJy9mb3Jnb3RQYXNzd29yZCcsIHtcbiAgICAgICAgICBuZXdQYXNzd29yZDogbmV3UHdkLFxuICAgICAgICAgIHVzZXI6IHVzZXJcbiAgICAgICAgfSlcbiAgICAgICAgLmZhaWwoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PT0gNDAwKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZVRleHQgPSBkYXRhLnJlc3BvbnNlSlNPTjtcbiAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dC5tc2csICdlcnJvcicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHNob3dNZXNzYWdlKGRhdGEubXNnLCAnbXNnJyk7XG4gICAgICAgICAgJCgnLmJ0bnMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAgICQoJyNsb2dpbkxpbmsnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2VQYXNzd29yZChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNsZWFyTWVzc2FnZSgpO1xuXG4gICAgY29uc3Qgb2xkUHdkID0gJCgnI29sZFBhc3N3b3JkJykudmFsKCk7XG4gICAgY29uc3QgbmV3UHdkID0gJCgnI25ld1Bhc3N3b3JkJykudmFsKCk7XG4gICAgY29uc3QgY29uZmlybVB3ZCA9ICQoJyNjb25maXJtUGFzc3dvcmQnKS52YWwoKTtcblxuICAgIGlmIChuZXdQd2QubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ25ld1Bhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmIChjb25maXJtUHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCdjb25maXJtUGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgfVxuXG4gICAgaWYgKG5ld1B3ZC5sZW5ndGggIT09IDAgJiYgY29uZmlybVB3ZCAhPT0gbmV3UHdkKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ2NvbmZpcm1QYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIHNob3dNZXNzYWdlKCdDb25maXJtIHBhc3N3b3JkIGRvZXNuXFwndCBtYXRjaCB3aXRoIHRoZSBuZXcgcGFzc3dvcmQnLCAnZXJyb3InKTtcbiAgICB9XG5cbiAgICBpZiAobmV3UHdkLmxlbmd0aCAhPT0gMCAmJiBjb25maXJtUHdkLmxlbmd0aCAhPT0gMCAmJiBuZXdQd2QgPT09IGNvbmZpcm1Qd2QpIHtcbiAgICAgICQucG9zdCgnL3VzZXIvY2hhbmdlUGFzc3dvcmQnLCB7XG4gICAgICAgICAgb2xkUGFzc3dvcmQ6IG9sZFB3ZCxcbiAgICAgICAgICBuZXdQYXNzd29yZDogbmV3UHdkXG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHQubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBzaG93TWVzc2FnZShkYXRhLm1zZywgJ21zZycpO1xuICAgICAgICAgICQoJy5idG5zJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAkKCcjbG9naW5MaW5rJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG5cblxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU2lnblVwKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY2xlYXJNZXNzYWdlKCk7XG5cbiAgICBjb25zdCBuYW1lID0gJChcIiN1c2VyTmFtZVwiKS52YWwoKTtcbiAgICBjb25zdCBlbWFpbCA9ICQoXCIjdXNlckVtYWlsXCIpLnZhbCgpO1xuICAgIGNvbnN0IHB3ZCA9ICQoXCIjdXNlclBhc3N3b3JkXCIpLnZhbCgpO1xuICAgIGNvbnN0IGNvbmZpcm1wd2QgPSAkKFwiI2NvbmZpcm1QYXNzd29yZFwiKS52YWwoKTtcbiAgICBjb25zdCB1c2VyTmFtZVJlZ2V4ID0gL15bYS16QS1aMC05Ll9dezEsMzB9JC87XG4gICAgY29uc3QgbmFtZVZlcmlmaWVzID0gdXNlck5hbWVSZWdleC50ZXN0KG5hbWUpO1xuXG5cbiAgICBpZiAobmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlck5hbWUnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgfVxuXG4gICAgaWYgKCFuYW1lVmVyaWZpZXMpIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlck5hbWUnKTtcbiAgICAgIHNob3dNZXNzYWdlKCdVc2VybmFtZXMgY2FuIG9ubHkgdXNlIGxldHRlcnMsIG51bWJlcnMsIHVuZGVyc2NvcmVzIGFuZCBwZXJpb2RzLicsICdlcnJvcicpO1xuICAgIH1cblxuICAgIGlmIChlbWFpbC5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlckVtYWlsJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmIChwd2QubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJQYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlybXB3ZC5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnY29uZmlybVBhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmIChwd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1wd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1wd2QgIT09IHB3ZCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCdjb25maXJtUGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICBzaG93RXJyb3IoJ0NvbmZpcm0gcGFzc3dvcmQgZG9lc25cXCd0IG1hdGNoIHdpdGggcGFzc3dvcmQnLCAnZXJyb3InKTtcbiAgICB9XG5cbiAgICAvLyBjb25zdCBlcnJvciA9ICdVc2VybmFtZXMgY2FuIG9ubHkgdXNlIGxldHRlcnMsIG51bWJlcnMsIHVuZGVyc2NvcmVzIGFuZCBwZXJpb2RzLic7XG4gICAgLy8gY29uc3QgbmFtZSA9ICdPTElWRSc7XG4gICAgLy8gY29uc3QgcHdkID0gJ09MSVZFJztcbiAgICAvLyBjb25zdCBlbWFpbCA9ICdnZWV0YUBnbWFpbC5jb20nO1xuICAgIGlmIChuYW1lLmxlbmd0aCAhPT0gMCAmJiBwd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1wd2QubGVuZ3RoICE9PSAwICYmIGVtYWlsLmxlbmd0aCAhPT0gMCkge1xuICAgICAgJC5wb3N0KCcvc2lnbnVwJywge1xuICAgICAgICAgIHVzZXJuYW1lOiBuYW1lLFxuICAgICAgICAgIHBhc3N3b3JkOiBwd2QsXG4gICAgICAgICAgZW1haWw6IGVtYWlsXG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBpZiAocmVzcG9uc2VUZXh0Lmxlbmd0aCA+PSAxKSB7XG4gICAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dFswXS5tc2csICdlcnJvcicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0Lm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgc2hvd01lc3NhZ2UoZGF0YS5tc2csICdtc2cnKTtcbiAgICAgICAgICAkKCcuYnRucycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgJCgnI2xvZ2luTGluaycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGRpc3BsYXlTZWFyY2hCYXIoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICQoJyNoZWFkZXJEaXYnKS5yZW1vdmVDbGFzcygnc2hvdycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgJCgnI3NlYXJjaCcpLmFkZENsYXNzKCdzaG93Jyk7XG4gIH1cblxuICBmdW5jdGlvbiBoaWRlU2VhcmNoQmFyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAkKCcjaGVhZGVyRGl2JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKS5hZGRDbGFzcygnc2hvdycpO1xuICAgICQoJyNzZWFyY2gnKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd1VzZXJNZW51RChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHVzZXJJY29uID0gJCgnI3VzZXItbWVudScpO1xuICAgIGlmICghdXNlckljb24uaGFzQ2xhc3MoJ3Nob3cnKSkge1xuICAgICAgJCgnI3VzZXItbWVudScpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJyN1c2VyLW1lbnUnKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gc2hvd1VzZXJNZW51KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdXNlckljb24gPSAkKCcjdXNlci1tZW51Jyk7XG4gICAgJCgnI3VzZXItbWVudScpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgdXNlckljb24uY3NzKCd3aWR0aCcsICcyNTBweCcpO1xuICAgIHVzZXJJY29uLnByZXBlbmQoJzxkaXYgY2xhc3M9XCJjbG9zZS1pY29uXCI+PGkgY2xhc3M9XCJmaS14XCI+PC9pPjwvZGl2PicpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZVVzZXJNZW51KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdXNlckljb24gPSAkKCcjdXNlci1tZW51Jyk7XG4gICAgJCgnI3VzZXItbWVudScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgdXNlckljb24uY3NzKCd3aWR0aCcsICcxODBweCcpO1xuICAgICQoJy5jbG9zZS1pY29uJykucmVtb3ZlKCk7XG5cblxuICB9XG5cblxuXG5cblxuICAvKipcbiAgICogVXRpbGl0eSBmdW5jdGlvbnNcbiAgICovXG5cbiAgZnVuY3Rpb24gY2xlYXJNZXNzYWdlKCkge1xuICAgICQoJyNlcnJvcicpLmVtcHR5KCk7XG4gICAgJCgnI21zZycpLmVtcHR5KCk7XG4gICAgJCgnI2VtcHR5RmllbGRzJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcuaWNvbi1lcnJvcicpLnJlbW92ZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd01lc3NhZ2UobXNnVHh0LCBtc2dEaXYpIHtcbiAgICB2YXIgdWxFbGUgPSAkKCcjbXNnY29udCcpO1xuICAgIGlmICh1bEVsZS5sZW5ndGggPT09IDApIHtcbiAgICAgIHVsRWxlID0gJCgnPHVsIGlkPVxcJ21zZ2NvbnRcXCc+PC91bD4nKTtcbiAgICB9XG4gICAgdWxFbGUuYXBwZW5kKCc8bGk+JyArIG1zZ1R4dCArICc8L2xpPicpO1xuICAgICQoJyMnICsgbXNnRGl2KS5odG1sKHVsRWxlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3dFcnJvckNpcmNsZShjaXJjbGVJbnApIHtcbiAgICBjb25zdCBpbnBFbGUgPSAkKCcjJyArIGNpcmNsZUlucCk7XG4gICAgY29uc3Qgc3BhbkVsZSA9ICQoJzxzcGFuIGNsYXNzPVxcJ2ljb24tZXJyb3JcXCc+PGkgY2xhc3M9XFwnZmkteC1jaXJjbGVcXCc+PC9pPjwvc3Bhbj4nKTtcbiAgICBpbnBFbGUuYWZ0ZXIoc3BhbkVsZSk7XG4gIH1cblxuXG5cblxufSgpKTtcbiJdfQ==
