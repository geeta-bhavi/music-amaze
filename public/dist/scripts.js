"use strict";$(function(){$(document).foundation(),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat")}),$("#login").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userPassword").val();if(0!==o.length&&0!==a.length){var t=/^[a-zA-Z0-9._]{1,30}$/.test(o);t&&$.post("/login",{username:o,password:a}).fail(function(e){var s=e.responseJSON;400===e.status&&r(s[0].msg,"error"),401===e.status&&r(s.msg,"error")}).done(function(e){window.location.href="/user/home"})}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#email").val();if(0!==o.length&&0!==a.length){var t=/^[a-zA-Z0-9._]{1,30}$/.test(o);t?$.post("/user/editProfile",{username:o,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(o){o.preventDefault(),s();var a=$("#username").val();0!==a.length?$.post("/verifyUser",{username:a}).fail(function(e){if(401===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(s){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),e=s}):0===a.length&&(n("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(o){o.preventDefault(),s();var a=$("#newPassword").val(),t=$("#confirmPassword").val();0===a.length&&(n("newPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&t!==a&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with the new password","error"));0!==a.length&&0!==t.length&&a===t&&$.post("/forgotPassword",{newPassword:a,user:e}).fail(function(e){if(400===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userEmail").val(),t=$("#userPassword").val(),i=$("#confirmPassword").val();0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide"));0===a.length&&(n("userEmail"),$("#emptyFields").removeClass("hide"));0===t.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==t.length&&0!==i.length&&i!==t&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),showError("Confirm password doesn't match with password","error"));0!==o.length&&0!==t.length&&0!==i.length&&0!==a.length&&$.post("/signup",{username:o,password:t,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",s);var e=null;function s(){$("#error").empty(),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function r(e,s){var r=$("#msgcont");0===r.length&&(r=$("<ul id='msgcont'></ul>")),r.append("<li>"+e+"</li>"),$("#"+s).html(r)}function n(e){var s=$("#"+e),r=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");s.after(r)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
