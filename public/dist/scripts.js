"use strict";$(function(){var e=null;function t(e){$.post("/update/playCount/"+e).fail(function(e){console.log(e)}).done(function(e){console.log(e)})}function s(){0===$("li.trackList.highlight").prev().length?$("#trackPrev").addClass("inactive"):$("#trackPrev").removeClass("inactive"),0===$("li.trackList.highlight").next().length?$("#trackNext").addClass("inactive"):$("#trackNext").removeClass("inactive"),$("#trackShuffle").removeClass("inactive"),$("#trackLike").removeClass("active"),$("#trackDislike").removeClass("active"),0===$("li.trackList.highlight").prev().length&&0===$("li.trackList.highlight").next().length&&$("#trackShuffle").addClass("inactive"),0===$("li.trackList.highlight").length?($("#trackPlaylist").addClass("inactive"),$("#trackLike").addClass("inactive"),$("#trackDislike").addClass("inactive")):($("#trackPlaylist").removeClass("inactive"),$("#trackLike").removeClass("inactive"),$("#trackDislike").removeClass("inactive"));var e=$("li.trackList.highlight").attr("data-like"),t=$("li.trackList.highlight").attr("data-dislike");"true"==e&&$("#trackLike").addClass("active"),"true"==t&&$("#trackDislike").addClass("active")}$(document).foundation(),$(".homeSlide").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3,infinite:!0,dots:!0}),window.location.pathname.indexOf("play")&&$("#audioPlayer").mediaelementplayer({stretching:"responsive",pluginPath:"../js/lib/build/",success:function(a,l,i){e=a,s(),e.play(),$(e).on("playing",function(){t($("li.trackList.highlight").attr("id")),$(e).off("playing")}),$(a).on("ended",function(){if($("#trackShuffle").hasClass("active")){var l=$("li.trackList").length,i=Math.floor(Math.random()*l+1);(o=$("li.trackList:nth-child("+i+")")).hasClass("highlight")&&0===(o=o.next()).length&&(o=$("li.trackList:nth-child(1)")),o.click()}else{var o=$("li.trackList.highlight").next();if($("#trackRepeat").hasClass("active"))a.play(),t($("li.trackList.highlight").attr("id"));else 0===o.length?(!function(s){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),s.addClass("highlight"),s.find(".trackItem").addClass("fi-sound");var a=s.data("track-src");e.setSrc(a),e.load(),$(e).on("playing",function(){var a=s.attr("id");t(a),$(e).off("playing")})}($("li.trackList").first()),s()):o.click()}})},error:function(e,t){alert("There is some error at the server playing the track!")}}),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat");$(window).width()<400?($(".menuDiv").addClass("menuMode"),$("#user-menu").addClass("menuMod"),$("#user-menu").removeClass("show")):($("#user-menu").removeClass("show"),$("#user-menu").css("width","180px"),$(".close-icon").remove(),$(".menuDiv").removeClass("menuMode"),$("#user-menu").removeClass("menuMod"))}),$(document).on("click",function(e){0===$(e.target).closest(".userMenu").length&&$("#user-menu").removeClass("show")}),$("#login").on("submit",function(e){e.preventDefault(),L();var t=$.trim($("#userName").val()),s=$.trim($("#userPassword").val());if(0!==t.length&&0!==s.length){var a=/^[a-zA-Z0-9._]{1,30}$/.test(t);a?$.post("/login",{username:t,password:s}).fail(function(e){var t=e.responseJSON;400===e.status&&T(t[0].msg,"error"),401===e.status&&T(t.msg,"error")}).done(function(e){window.location.href="/user/home"}):(N("userName"),T("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===t.length&&(N("userName"),$("#emptyFields").removeClass("hide")),0==s.length&&(N("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),L();var t=$.trim($("#userName").val()),s=$.trim($("#email").val());if(0!==t.length&&0!==s.length){var a=/^[a-zA-Z0-9._]{1,30}$/.test(t);a?$.post("/user/editProfile",{username:t,email:s}).fail(function(e){if(400===e.status){var t=e.responseJSON;t.length>=1?T(t[0].msg,"error"):T(t.msg,"error")}}).done(function(e){T(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(N("userName"),T("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===t.length&&(N("userName"),$("#emptyFields").removeClass("hide")),0==s.length&&(N("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(e){e.preventDefault(),L();var t=$("#username").val();0!==t.length?$.post("/verifyUser",{username:t}).fail(function(e){if(401===e.status){var t=e.responseJSON;T(t.msg,"error")}}).done(function(e){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),a=e}):0===t.length&&(N("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(e){e.preventDefault(),L();var t=$.trim($("#newPassword").val()),s=$.trim($("#confirmPassword").val());0===t.length&&(N("newPassword"),$("#emptyFields").removeClass("hide"));0===s.length&&(N("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==t.length&&s!==t&&(N("confirmPassword"),$("#emptyFields").addClass("hide"),T("Confirm password doesn't match with the new password","error"));0!==t.length&&0!==s.length&&t===s&&$.post("/forgotPassword",{newPassword:t,user:a}).fail(function(e){if(400===e.status){var t=e.responseJSON;T(t.msg,"error")}}).done(function(e){T(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),L();var t=$.trim($("#userName").val()),s=$.trim($("#userEmail").val()),a=$.trim($("#userPassword").val()),l=$.trim($("#confirmPassword").val()),i=/^[a-zA-Z0-9._]{1,30}$/.test(t);0===t.length&&(N("userName"),$("#emptyFields").removeClass("hide"));i||0===t.length||(N("userName"),T("Usernames can only use letters, numbers, underscores and periods.","error"));0===s.length&&(N("userEmail"),$("#emptyFields").removeClass("hide"));0===a.length&&(N("userPassword"),$("#emptyFields").removeClass("hide"));0===l.length&&(N("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&0!==l.length&&l!==a&&(N("confirmPassword"),$("#emptyFields").addClass("hide"),T("Confirm password doesn't match with password","error"),0!==s.length&&0!==t.length||$("#emptyFields").removeClass("hide"));0!==t.length&&0!==a.length&&0!==l.length&&0!==s.length&&a===l&&i&&$.post("/signup",{username:t,password:a,email:s}).fail(function(e){if(400===e.status){var t=e.responseJSON;t.length>=1?T(t[0].msg,"error"):T(t.msg,"error")}}).done(function(e){T(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",L),$("#changePassword").on("submit",function(e){e.preventDefault(),L();var t=$.trim($("#oldPassword").val()),s=$.trim($("#newPassword").val()),a=$.trim($("#confirmPassword").val());0===t.length&&(N("oldPassword"),$("#emptyFields").removeClass("hide"));0===s.length&&(N("newPassword"),$("#emptyFields").removeClass("hide"));0===a.length&&(N("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==s.length&&0!==a.length&&a!==s&&(N("confirmPassword"),$("#emptyFields").addClass("hide"),T("Confirm password doesn't match with the new password","error"),0===t.length&&$("#emptyFields").removeClass("hide"));0!==t.length&&0!==s.length&&0!==a.length&&s===a&&$.post("/user/changePassword",{oldPassword:t,newPassword:s}).fail(function(e){if(400===e.status){var t=e.responseJSON;T(t.msg,"error")}}).done(function(e){T(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#searchIcon").on("click",l),$(".js-search-close").on("click",function(e){e.preventDefault(),$("#search-text").val(""),$("#headerDiv").removeClass("hide").addClass("show"),$("#search").removeClass("show"),$(".js-nonSearchView").removeClass("hide"),$(".js-searchView").addClass("hide"),-1===window.location.pathname.indexOf("user")&&(window.location.pathname="/user/home")}),$(".menuDiv").on("click",function(e){e.preventDefault(),$("#user-menu").hasClass("show")?$("#user-menu").removeClass("show"):$("#user-menu").addClass("show")}),$(".trackList").on("click",function(a){if(!$(this).hasClass("highlight")&&!$(a.target).hasClass("delete-track")&&!$(a.target).hasClass("deleteMenu")){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),$(this).addClass("highlight"),$(this).find(".trackItem").addClass("fi-sound");var l=$(this).data("track-src");e.setSrc(l),e.load(),e.play(),s();var i=$(this).attr("id");t(i)}}),$("#search-text").on("keyup",function(e){13===e.keyCode&&i(e)}),$(".js-search-icon").on("click",i),$("#trackRepeat").on("click",function(e){e.preventDefault(),$(this).toggleClass("active")}),$("#trackLike").on("click",function(e){e.preventDefault(),$(this).toggleClass("active");var t=$(this).hasClass("active"),s="",a=$("li.trackList.highlight").attr("id");$("li.trackList.highlight").attr("data-like",t),t&&$("#trackDislike").hasClass("active")&&($("#trackDislike").removeClass("active"),s="false",$("li.trackList.highlight").attr("data-dislike",s)),$.post("/user/likeUnlike",{like:t,trackId:a,dislike:s}).fail(function(e){console.log(e)}).done(function(e){console.log(e)})}),$("#trackDislike").on("click",function(e){e.preventDefault(),$(this).toggleClass("active");var t=$(this).hasClass("active"),s="",a=$("li.trackList.highlight").attr("id");$("li.trackList.highlight").attr("data-dislike",t),t&&$("#trackLike").hasClass("active")&&($("#trackLike").removeClass("active"),s="false",$("li.trackList.highlight").attr("data-like",s)),$.post("/user/dislikeUndislike",{like:s,trackId:a,dislike:t}).fail(function(e){console.log(e)}).done(function(e){console.log(e)})}),$("#trackPrev").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||($("li.trackList.highlight").prev().click(),s())}),$("#trackNext").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||($("li.trackList.highlight").next().click(),s())}),$("#trackShuffle").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||$(this).toggleClass("active")}),$(".delete-track").on("click",function(e){e.preventDefault();var t=$(this).next(".deleteMenu"),s=$(this).next(".deleteMenu").css("display");$(".deleteMenu").css("display","none"),"block"===s?t.css("display","none"):t.css("display","block")}),$(".deleteMenu").on("click",function(e){e.preventDefault();var t=$(this).closest("li.trackList"),a=t.attr("id"),l=$(".playlist-name").attr("data-playlist-id");$.post("/user/playlist/deleteTrack",{trackId:a,playlistId:l}).fail(function(e){console.log(e);var t=e.responseJSON;T(t.msg,"trackerror")}).done(function(e){console.log(e),t.remove(),s()})}),$(".editPlaylist").on("click",function(e){e.preventDefault(),$("li .trackTime").toggleClass("hide"),$("li .dragHandle").toggleClass("active"),$("li .deleteMenu").toggleClass("active"),"Edit"===$(this).text()?$("li .dragHandle").hasClass("active")&&($(this).html("Done"),$("#tracks").sortable({handle:"div.dragHandle",cursor:"grab",update:function(e,t){var a=$("#tracks").sortable("toArray"),l=a.reduce(function(e,t,s){return e[t]=s+1,e},{}),i=$("div.playlist-name").attr("data-playlist-id");$.post("/play/playlistChange/rearrangeData",{playlistId:i,sortedIds:l}).fail(function(e){console.log(e)}).done(function(e){console.log(e),s()})}}),$("#tracks div.dragHandle").disableSelection()):$(this).html("Edit")}),$("#concert-text").on("keyup",function(e){13===e.keyCode&&y(e)}),$(".js-concert-search").on("click",y),$("#stat-text").on("keyup",function(e){13===e.keyCode&&C(e)}),$(".js-stat-search").on("click",C),$("#pay").on("submit",function(e){e.preventDefault(),console.log("here"),$.post("/payment").fail(function(e){var t=e.responseJSON;T(t.msg,"error")}).done(function(e){console.log(e),window.location.href="/stats"})}),$(document).on("click",".searchHome",i),$(document).on("click",".stat-albums li a",function(e){e.preventDefault(),$("section.stat-results").addClass("hide");var t=$(this).attr("id"),s=$(this).find(".artistName").text();$.post("/statresults",{albumId:t,albumName:s}).fail(function(e){console.log(e),$("#stat-results").html(e)}).done(function(e){console.log(e),$("#stat-results").html(e),e.indexOf("albumDetails")>-1&&($("section.stat-results").removeClass("hide"),P())})}),$(document).on("click","ul.js-artists li a",function(e){e.preventDefault(),$(".apiloadingScreen").toggle("active");var t=$(this).attr("id"),s=$(this).find(".artistName").text();$.post("/searchconcert/findConcertsOfArtist",{artistId:t,artistName:s}).fail(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)}).done(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)})}),$(document).on("click","ul.js-locations li a",function(e){e.preventDefault(),$(".apiloadingScreen").toggle("active");var t=$(this).attr("id"),s=$(this).find(".artistName").text();$.post("/searchconcert/findConcertsOfLocation",{locationId:t,locationName:s}).fail(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)}).done(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)})}),$(document).on("click",".playListCreate",function(e){e.preventDefault(),L(),$(".playListPopup").slideToggle()}),$(document).on("click",".closebutton",c),$(document).on("click","#cancelBtn",c),$(document).on("click","#createBtn",d),$(document).on("keyup","#playlistName",function(e){13===e.keyCode&&d(e)}),$(document).on("click",".playlistHome a",function(e){if(e.preventDefault(),!($(e.target).hasClass("playlist-manage")||$(e.target).hasClass("playlistManage")||$(e.target).hasClass("editPlaylistName")||$(e.target).hasClass("deletePlaylist"))){var t=$(this).closest("li").attr("id");$.post("/play/playlist/"+t).fail(function(e){console.log(e);var t=e.responseJSON;T(t.msg,"playlistTrackError")}).done(function(e){e.msg>0&&(window.location.href="/play/playlist/"+t)})}}),$(document).on("click","#cancelDeleteBtn",h),$(document).on("click",".closeDelete",h),$(document).on("click",".deletePlaylist",function(e){e.preventDefault(),L();var t=$(this).data("playlist-id");$(".deletePlaylistPopup").slideToggle(),$("#deleteBtn").attr("data-playlist-id",t)}),$(document).on("click","#deleteBtn",function(e){e.preventDefault(),L();var t=$("#deleteBtn").attr("data-playlist-id"),s=9;"/user/playlists/seeAll"===window.location.pathname&&(s=5e3);$.post("/user/deletePlaylist",{playlistId:t,limit:s}).fail(function(e){console.log(e);var t=e.responseJSON;T(t.msg,"playListerror")}).done(function(e){$("#playlistCont").html(e)})}),$(document).on("click",".playlist-manage",function(e){e.preventDefault();var t=$(this).next(".playlist-actions"),s=$(this).next(".playlist-actions").css("display");$(".playlist-actions").css("display","none"),"block"===s?t.css("display","none"):t.css("display","block")}),$(document).on("click",".editPlaylistName",function(e){e.preventDefault(),L();var t=$(this).attr("data-playlist-id"),s=$(this).closest("li").find("span.playlistName").html();$(".editPlaylistPopup").slideToggle(),$("#editplaylistName").val(s),$("#editBtn").attr("data-playlist-id",t)}),$(document).on("click","#cancelEditBtn",u),$(document).on("click",".closeEdit",u),$(document).on("click","#editBtn",m),$(document).on("keyup","#editplaylistName",function(e){13===e.keyCode&&m(e)}),$(document).on("click",".seeAllPlaylists",r),$(document).on("click","#trackPlaylist",function(e){if(e.preventDefault(),!$(this).hasClass("inactive")){L();var t=$("li.trackList.highlight").attr("id");$.post("/user/playlists").fail(function(e){console.log(e);var t=e.responseJSON;T(t.msg,"playListerror")}).done(function(e){$("#playlistCont").html(e)}),$(".addToPlaylistPopup").slideToggle(),$(".addToPlaylistPopup").attr("data-track-id",t)}}),$(document).on("click",".closeAddToPlaylist",p),$(document).on("click",".playlist_add",function(e){e.preventDefault();var t=$(".addToPlaylistPopup").attr("data-track-id"),s=$(this).attr("id");$.post("/user/playlist/addtracktoplaylist",{trackId:t,playlistId:s}).fail(function(e){var t=e.responseJSON;T(t.msg,"playListerror")}).done(function(t){$("#playlistCont").html(t),p(e)})}),$(document).on("click",".addTo_playlist a",function(e){e.preventDefault()}),$(document).on("click",".menuMode",function(e){e.preventDefault();var t=$("#user-menu");$("#user-menu").addClass("show"),t.css("width","250px"),t.prepend('<div class="close-icon"><i class="fi-x"></i></div>')}),$(document).on("click",".close-icon",function(e){e.preventDefault();var t=$("#user-menu");$("#user-menu").removeClass("show"),t.css("width","180px"),$(".close-icon").remove()}),$(document).on("click",".seeAllR",n),$(document).on("click",".homeTabsList li a.js-sup",function(e,t){e.preventDefault();var s=$(this).attr("data-tab-category");$(".homeTabsList li a").removeClass("active"),$(this).addClass("active"),"playlistTab"===s?$.post("/user/playlists/seeAll").fail(function(e){$("#playlistCont").removeClass("hide"),$(".js-nonPlaylist").addClass("hide"),$("#playlistCont").html(e)}).done(function(e){if($("#playlistCont").removeClass("hide"),$(".js-nonPlaylist").addClass("hide"),$("#playlistCont").html(e),void 0===t){history.pushState({category:"playlist"},"","/user/playlists/seeAll")}}):"recommendTab"===s?g(t):"topTrendTab"===s?v(t):"playedTab"===s&&f(t)}),$(document).on("click",".js-chooseartist",function(e){e.preventDefault(),$(".artistList").slideToggle()}),$(document).on("click",".js-chooseLocation",function(e){e.preventDefault(),$(".locationList").slideToggle()});var a=null;function l(e){e&&e.preventDefault(),$("#headerDiv").removeClass("show").addClass("hide"),$("#search").addClass("show"),$(".js-nonSearchView").addClass("hide"),$(".js-searchView").removeClass("hide")}function i(e,t,s){null!==e&&e.preventDefault(),$(".js-searchView").empty();var a=void 0!==t?t:$.trim($("#search-text").val());a=a.replace(/\s+/g," "),(a=encodeURIComponent(a)).length>0&&" "!==a&&$.post("/search/"+a).fail(function(e){console.log(e),$("#searchCont").html(e)}).done(function(e){if($("#searchCont").html(e),$("#js-searchResults").removeClass("hide"),void 0===s){var t="/search/"+a;history.pushState({search:decodeURIComponent(a)},"",t)}})}if(null!==window.history.state){var o=window.history.state;void 0!==o.search&&void 0===o.category?(l(),$("#search-text").val(o.search),i(null,o.search,"noPopstate")):void 0!==o.search&&void 0!==o.category?(l(),$("#search-text").val(o.search),n(null,o.search,o.category,"noPopstate")):"playlist"===o.category?r(null,"noPopstate"):"recommendations"===o.category?g("noPopstate"):"topTrend"===o.category?v("noPopstate"):"mostPlayed"===o.category&&f("noPopstate")}function n(e,t,s,a){null!==e&&e.preventDefault();var l=void 0!==t?t:$(".searchStr").html(),i=void 0!==s?s:$(this).data("category");l=encodeURIComponent(l),$.post("/search/"+i+"/"+l).fail(function(e){$("#searchCont").html(e)}).done(function(e){if($("#searchCont").html(e),$("#js-searchResults").removeClass("hide"),void 0===a){var t="/search/"+i+"/"+l;history.pushState({search:decodeURIComponent(l),category:i},"",t)}})}function r(e,t){null!==e&&e.preventDefault(),$(".homeTabsList li a").removeClass("active"),$(".homeTabsList li a[data-tab-category='playlistTab']").addClass("active"),$.post("/user/playlists/seeAll").fail(function(e){$("#playlistCont").html(e)}).done(function(e){if($("#playlistCont").html(e),$(".js-nonPlaylist").addClass("hide"),void 0===t){history.pushState({category:"playlist"},"","/user/playlists/seeAll")}})}function c(e){e.preventDefault(),$(".playListPopup").slideToggle()}function d(e){e.preventDefault(),L();var t=$.trim($("#playlistName").val());0===t.length&&(N("playlistName"),$("#emptyFields").removeClass("hide")),t=encodeURIComponent(t);var s=9,a=!1;-1!==window.location.pathname.indexOf("/play/")&&(s=5e3,a=!0),"/user/playlists/seeAll"===window.location.pathname&&(s=5e3),0!==t.length&&$.post("/user/createPlaylist",{playlistName:t,limit:s,playPage:a}).fail(function(e){console.log(e),T(e.responseJSON.msg,"error")}).done(function(t){-1!==window.location.pathname.indexOf("/play/")&&c(e),$("#playlistCont").html(t)})}function h(e){e.preventDefault(),$(".deletePlaylistPopup").slideToggle(),$("#deleteBtn").removeAttr("data-playlist-id")}function u(e){e.preventDefault(),$(".editPlaylistPopup").slideToggle(),$("#editBtn").removeAttr("data-playlist-id")}function m(e){e.preventDefault(),L();var t=$("#editBtn").attr("data-playlist-id"),s=$.trim($("#editplaylistName").val());0===s.length&&(N("editplaylistName"),$("#emptyField").removeClass("hide")),0!==s.length&&(s=encodeURIComponent(s),$.post("/user/editPlaylistname",{playlistId:t,playlistname:s}).fail(function(e){console.log(e),T(e.responseJSON.msg,"editPlaylistError")}).done(function(s){console.log(s);var a=decodeURIComponent(s.msg);$("li#"+t).find("span.playlistName").html(a),u(e)}))}function p(e){e.preventDefault(),$(".addToPlaylistPopup").removeAttr("data-track-id"),$(".addToPlaylistPopup").slideToggle()}function g(e){$.post("/user/recommendations/seeAll").fail(function(e){$("section").addClass("hide"),$("#recommendationsCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#recommendationsCont").html(e)}).done(function(t){if($("section").addClass("hide"),$("#recommendationsCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#recommendationsCont").html(t),void 0===e){history.pushState({category:"recommendations"},"","/user/recommendations/seeAll")}})}function v(e){$.post("/user/topTrending/seeAll").fail(function(e){$("section").addClass("hide"),$("#topTrendCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#topTrendCont").html(e)}).done(function(t){if($("section").addClass("hide"),$("#topTrendCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#topTrendCont").html(t),void 0===e){history.pushState({category:"topTrend"},"","/user/topTrending/seeAll")}})}function f(e){$.post("/user/mostPlayed/seeAll").fail(function(e){var t=e;void 0!==e.responseJSON&&(t=e.responseJSON.msg),$("section").addClass("hide"),$("#mostPlayedCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#mostPlayedCont").html(t)}).done(function(t){if($("section").addClass("hide"),$("#mostPlayedCont").removeClass("hide"),$("#homeTabsCont").removeClass("hide"),$("#mostPlayedCont").html(t),void 0===e){history.pushState({category:"mostPlayed"},"","/user/mostPlayed/seeAll")}})}$(window).on("popstate",function(e){var t=e.originalEvent.state;if(null===t){var s=window.location.href;window.location.href=s}else void 0!==t.search&&void 0===t.category?(l(e),$("#search-text").val(t.search),i(e,t.search,"noPopstate")):void 0!==t.search&&void 0!==t.category?(l(e),$("#search-text").val(t.search),n(e,t.search,t.category,"noPopstate")):"playlist"===t.category?r(e,"noPopstate"):"recommendations"===t.category?g("noPopstate"):"topTrend"===t.category?v("noPopstate"):"mostPlayed"===t.category&&f("noPopstate")});function y(e){e.preventDefault(),$(".apiloadingScreen").toggle("active");var t=$.trim($("#concert-text").val());t=t.replace(/\s+/g," "),(t=encodeURIComponent(t)).length>0&&" "!==t&&$.post("/searchconcert",{concertText:t}).fail(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)}).done(function(e){$(".apiloadingScreen").toggle("active"),console.log(e),$("#concert-results").html(e)})}function C(e){e.preventDefault(),$("section.stat-results").addClass("hide");var t=$.trim($("#stat-text").val());t=t.replace(/\s+/g," "),(t=encodeURIComponent(t)).length>0&&" "!==t?$.post("/searchstat",{statText:t}).fail(function(e){console.log(e),$("#stat-results").html(e)}).done(function(e){console.log(e),$("#stat-results").html(e),e.indexOf("albumDetails")>-1&&($("section.stat-results").removeClass("hide"),P())}):$("#stat-results").html("")}var k=[],w="";function P(){D(null),k=[];setTimeout(function(){console.log($("#latlng").html());for(var e=JSON.parse($("#latlng").html()),t=0;t<e.length;t++){var s=e[t].LOCATION_COUNT;w=s>=200?"/dist/assets/highMarker.png":s>=100&&s<=199?"/dist/assets/marker.png":"/dist/assets/lowMarker.png";var a=new google.maps.LatLng(e[t].LATITUDE,e[t].LONGITUDE),l=new google.maps.Marker({position:a,icon:w,map:map});k.push(l)}},500)}function D(e){for(var t=0;t<k.length;t++)k[t].setMap(e)}function L(){$("#error").empty(),$("#trackerror").empty(),$("#playListerror").empty(),$("#playlistTrackError").empty(),$("#editPlaylistError").empty(),$("#emptyField").addClass("hide"),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function T(e,t){var s=$("#msgcont");0===s.length&&(s=$("<ul id='msgcont'></ul>")),s.append("<li>"+e+"</li>"),$("#"+t).html(s)}function N(e){var t=$("#"+e),s=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");t.after(s)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
