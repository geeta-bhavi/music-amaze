"use strict";$(function(){var e=null;function s(e){$.post("/update/playCount/"+e).fail(function(e){console.log(e)}).done(function(e){console.log(e)})}function t(){0===$("li.trackList.highlight").prev().length?$("#trackPrev").addClass("inactive"):$("#trackPrev").removeClass("inactive"),0===$("li.trackList.highlight").next().length?$("#trackNext").addClass("inactive"):$("#trackNext").removeClass("inactive"),0===$("li.trackList.highlight").prev().length&&0===$("li.trackList.highlight").next().length&&$("#trackShuffle").addClass("inactive")}$(document).foundation(),$(".screenText").slick({dots:!0,infinite:!0,speed:500,fade:!0,cssEase:"linear"}),window.location.pathname.indexOf("play")&&$("#audioPlayer").mediaelementplayer({stretching:"responsive",pluginPath:"../js/lib/build/",success:function(a,n,r){e=a,t(),e.play(),$(e).on("playing",function(){s($("li.trackList.highlight").attr("id")),$(e).off("playing")}),$(a).on("ended",function(){if($("#trackShuffle").hasClass("active")){var n=$("li.trackList").length,r=Math.floor(Math.random()*n+1);(i=$("li.trackList:nth-child("+r+")")).hasClass("highlight")&&0===(i=i.next()).length&&(i=$("li.trackList:nth-child(1)")),i.click(),t()}else{var i=$("li.trackList.highlight").next();if($("#trackRepeat").hasClass("active"))a.play(),s($("li.trackList.highlight").attr("id"));else 0===i.length?function(t){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),t.addClass("highlight"),t.find(".trackItem").addClass("fi-sound");var a=t.data("track-src");e.setSrc(a),e.load(),$(e).on("playing",function(){var a=t.attr("id");s(a),$(e).off("playing")})}($("li.trackList").first()):i.click();t()}})},error:function(e,s){alert("There is some error at the server playing the track!")}}),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat");$(window).width()<400?($(".menuDiv").addClass("menuMode"),$("#user-menu").addClass("menuMod"),$("#user-menu").removeClass("show")):($("#user-menu").removeClass("show"),$("#user-menu").css("width","180px"),$(".close-icon").remove(),$(".menuDiv").removeClass("menuMode"),$("#user-menu").removeClass("menuMod"))}),$("#login").on("submit",function(e){e.preventDefault(),c();var s=$("#userName").val(),t=$("#userPassword").val();if(0!==s.length&&0!==t.length){var a=/^[a-zA-Z0-9._]{1,30}$/.test(s);a?$.post("/login",{username:s,password:t}).fail(function(e){var s=e.responseJSON;400===e.status&&d(s[0].msg,"error"),401===e.status&&d(s.msg,"error")}).done(function(e){window.location.href="/user/home"}):(h("userName"),d("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===s.length&&(h("userName"),$("#emptyFields").removeClass("hide")),0==t.length&&(h("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),c();var s=$("#userName").val(),t=$("#email").val();if(0!==s.length&&0!==t.length){var a=/^[a-zA-Z0-9._]{1,30}$/.test(s);a?$.post("/user/editProfile",{username:s,email:t}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?d(s[0].msg,"error"):d(s.msg,"error")}}).done(function(e){d(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(h("userName"),d("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===s.length&&(h("userName"),$("#emptyFields").removeClass("hide")),0==t.length&&(h("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(e){e.preventDefault(),c();var s=$("#username").val();0!==s.length?$.post("/verifyUser",{username:s}).fail(function(e){if(401===e.status){var s=e.responseJSON;d(s.msg,"error")}}).done(function(e){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),a=e}):0===s.length&&(h("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(e){e.preventDefault(),c();var s=$("#newPassword").val(),t=$("#confirmPassword").val();0===s.length&&(h("newPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(h("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==s.length&&t!==s&&(h("confirmPassword"),$("#emptyFields").addClass("hide"),d("Confirm password doesn't match with the new password","error"));0!==s.length&&0!==t.length&&s===t&&$.post("/forgotPassword",{newPassword:s,user:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;d(s.msg,"error")}}).done(function(e){d(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),c();var s=$("#userName").val(),t=$("#userEmail").val(),a=$("#userPassword").val(),n=$("#confirmPassword").val(),r=/^[a-zA-Z0-9._]{1,30}$/.test(s);0===s.length&&(h("userName"),$("#emptyFields").removeClass("hide"));r||0===s.length||(h("userName"),d("Usernames can only use letters, numbers, underscores and periods.","error"));0===t.length&&(h("userEmail"),$("#emptyFields").removeClass("hide"));0===a.length&&(h("userPassword"),$("#emptyFields").removeClass("hide"));0===n.length&&(h("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&0!==n.length&&n!==a&&(h("confirmPassword"),$("#emptyFields").addClass("hide"),d("Confirm password doesn't match with password","error"),0!==t.length&&0!==s.length||$("#emptyFields").removeClass("hide"));0!==s.length&&0!==a.length&&0!==n.length&&0!==t.length&&a===n&&r&&$.post("/signup",{username:s,password:a,email:t}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?d(s[0].msg,"error"):d(s.msg,"error")}}).done(function(e){d(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",c),$("#changePassword").on("submit",function(e){e.preventDefault(),c();var s=$("#oldPassword").val(),t=$("#newPassword").val(),a=$("#confirmPassword").val();0===s.length&&(h("oldPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(h("newPassword"),$("#emptyFields").removeClass("hide"));0===a.length&&(h("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==t.length&&0!==a.length&&a!==t&&(h("confirmPassword"),$("#emptyFields").addClass("hide"),d("Confirm password doesn't match with the new password","error"),0===s.length&&$("#emptyFields").removeClass("hide"));0!==s.length&&0!==t.length&&0!==a.length&&t===a&&$.post("/user/changePassword",{oldPassword:s,newPassword:t}).fail(function(e){if(400===e.status){var s=e.responseJSON;d(s.msg,"error")}}).done(function(e){d(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#searchIcon").on("click",n),$(".js-search-close").on("click",function(e){e.preventDefault(),$("#search-text").val(""),$("#headerDiv").removeClass("hide").addClass("show"),$("#search").removeClass("show"),$(".js-nonSearchView").removeClass("hide"),$(".js-searchView").addClass("hide"),-1===window.location.pathname.indexOf("user")&&(window.location.pathname="/user/home")}),$(".menuDiv").on("click",function(e){e.preventDefault(),$("#user-menu").hasClass("show")?$("#user-menu").removeClass("show"):$("#user-menu").addClass("show")}),$(".trackList").on("click",function(t){if(!$(this).hasClass("highlight")){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),$(this).addClass("highlight"),$(this).find(".trackItem").addClass("fi-sound");var a=$(this).data("track-src");e.setSrc(a),e.load(),e.play();var n=$(this).attr("id");s(n)}}),$("#search-text").on("keyup",function(e){13===e.keyCode&&r(e)}),$(".js-search-icon").on("click",r),$("#trackRepeat").on("click",l),$("#trackLike").on("click",l),$("#trackPrev").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||($("li.trackList.highlight").prev().click(),t())}),$("#trackNext").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||($("li.trackList.highlight").next().click(),t())}),$("#trackShuffle").on("click",function(e){e.preventDefault(),$(this).hasClass("inactive")||$(this).toggleClass("active")}),$(".playListCreate").on("click",function(e){e.preventDefault()}),$(document).on("click",".menuMode",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").addClass("show"),s.css("width","250px"),s.prepend('<div class="close-icon"><i class="fi-x"></i></div>')}),$(document).on("click",".close-icon",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").removeClass("show"),s.css("width","180px"),$(".close-icon").remove()}),$(document).on("click",".seeAllR",o);var a=null;function n(e){e&&e.preventDefault(),$("#headerDiv").removeClass("show").addClass("hide"),$("#search").addClass("show"),$(".js-nonSearchView").addClass("hide"),$(".js-searchView").removeClass("hide")}function r(e,s,t){null!==e&&e.preventDefault(),$(".js-searchView").empty();var a=void 0!==s?s:$.trim($("#search-text").val());a=a.replace(/\s+/g," "),(a=encodeURIComponent(a)).length>0&&" "!==a&&$.post("/search/"+a).fail(function(e){console.log(e),$("#searchCont").html(e)}).done(function(e){if($("#searchCont").html(e),$("#js-searchResults").removeClass("hide"),void 0===t){var s="/search/"+a;history.pushState({search:decodeURIComponent(a)},"",s)}})}if(null!==window.history.state){var i=window.history.state;void 0!==i.search&&void 0===i.category?(n(),$("#search-text").val(i.search),r(null,i.search,"noPopstate")):void 0!==i.search&&void 0!==i.category&&(n(),$("#search-text").val(i.search),o(null,i.search,i.category,"noPopstate"))}function o(e,s,t,a){null!==e&&e.preventDefault();var n=void 0!==s?s:$(".searchStr").html(),r=void 0!==t?t:$(this).data("category");n=encodeURIComponent(n),$.post("/search/"+r+"/"+n).fail(function(e){$("#searchCont").html(e)}).done(function(e){if($("#searchCont").html(e),$("#js-searchResults").removeClass("hide"),void 0===a){var s="/search/"+r+"/"+n;history.pushState({search:decodeURIComponent(n),category:r},"",s)}})}function l(e){e.preventDefault(),$(this).toggleClass("active")}function c(){$("#error").empty(),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function d(e,s){var t=$("#msgcont");0===t.length&&(t=$("<ul id='msgcont'></ul>")),t.append("<li>"+e+"</li>"),$("#"+s).html(t)}function h(e){var s=$("#"+e),t=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");s.after(t)}$(window).on("popstate",function(e){var s=e.originalEvent.state;if(null===s){var t=window.location.href;window.location.href=t}else void 0!==s.search&&void 0===s.category?(n(e),$("#search-text").val(s.search),r(e,s.search,"noPopstate")):void 0!==s.search&&void 0!==s.category&&(n(e),$("#search-text").val(s.search),o(e,s.search,s.category,"noPopstate"))})}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsIm1lZGlhRWxlIiwidXBkYXRlTm9PZlBsYXlzIiwidHJhY2tJZCIsImNvbnNvbGUiLCJmYWlsIiwiZG9uZSIsImRhdGEiLCJsb2ciLCJoaWdoTGlnaHRQcmV2TmV4dCIsInByZXYiLCJsZW5ndGgiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwibmV4dCIsImxpRWxlIiwiZG9jdW1lbnQiLCJmb3VuZGF0aW9uIiwic2xpY2siLCJkb3RzIiwiaW5maW5pdGUiLCJzcGVlZCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJpbmRleE9mIiwibWVkaWFlbGVtZW50cGxheWVyIiwicGx1Z2luUGF0aCIsInN1Y2Nlc3MiLCJtZWRpYUVsZW1lbnQiLCJvcmlnaW5hbE5vZGUiLCJpbnN0YW5jZSIsInBsYXkiLCJhdHRyIiwib24iLCJoYXNDbGFzcyIsImxpQ291bnQiLCJmbG9vciIsIk1hdGgiLCJyYW5kb20iLCJjbGljayIsImNhbGxGb2N1cyIsImZpbmQiLCJ0cmFja1NyYyIsInNldFNyYyIsIm9mZiIsImZpcnN0IiwiYWxlcnQiLCJ3aWR0aCIsImlzIiwiY3NzIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY2xlYXJNZXNzYWdlIiwibmFtZSIsInZhbCIsIm5hbWVWZXJpZmllcyIsInVzZXJuYW1lIiwicHdkIiwicGFzc3dvcmQiLCJ0ZXN0Iiwic2hvd01lc3NhZ2UiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJyZXNwb25zZUpTT04iLCJtc2ciLCJzaG93RXJyb3JDaXJjbGUiLCJocmVmIiwiaGFuZGxlVXBkYXRlUHJvZmlsZSIsImVtYWlsIiwicG9zdCIsImhhbmRsZVVwZGF0ZVBhc3N3b3JkIiwibmV3UHdkIiwiY29uZmlybVB3ZCIsIm5ld1Bhc3N3b3JkIiwiaGFuZGxlQ2hhbmdlUGFzc3dvcmQiLCJvbGRQd2QiLCJjb25maXJtcHdkIiwiaGFuZGxlU2lnblVwIiwidXNlck5hbWVSZWdleCIsImRpc3BsYXlTZWFyY2hCYXIiLCJ1c2VySWNvbiIsInByZXBlbmQiLCJ0aGlzIiwibG9hZCIsImtleUNvZGUiLCJzZWFyY2giLCJwbGF5TmV4dCIsImxpbmtBY3RpdmUiLCJwbGF5UHJldmlvdXMiLCJyZW1vdmUiLCJzZWVBbGxSZXN1bHRzIiwidXNlciIsInN0ciIsInBvcHN0YXRlIiwic2VhcmNoU3RyaW5nIiwic3RhdGUiLCJ0cmltIiwicmVwbGFjZSIsInVuZGVmaW5lZCIsImh0bWwiLCJvcmlnaW5hbEV2ZW50IiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsImRlY29kZVVSSUNvbXBvbmVudCIsInBhdGgiLCJjYXRlZ29yeSIsInNyY2hTdHIiLCJjcmVhdGVQbGF5bGlzdCIsImNhdGVncnkiLCJzZWFyY2hTdHIiLCJ1bEVsZSIsIm1zZ1R4dCIsImFwcGVuZCIsIm1zZ0RpdiIsImlucEVsZSIsImFmdGVyIiwic3BhbkVsZSIsInRvZ2dsZUNsYXNzIiwiZW1wdHkiLCJjaXJjbGVJbnAiXSwibWFwcGluZ3MiOiJhQUFBQSxFQUFFLFdBQUEsSUFBQUMsRUFBVyxLQXdGVEQsU0FBQUUsRUFBQUMsR0FFRUMsRUFBQUEsS0FBQUEscUJBQUFELEdBRkZFLEtBSUNDLFNBQUtDLEdBQ0pILFFBQVFJLElBQUlELEtBR2ZELEtBQUEsU0FBQUMsR0FIR0gsUUFBUUksSUFBSUQsS0FrQ1pQLFNBQUVTLElBQ0gsSUFBQVQsRUFBQSwwQkFBQVUsT0FBQUMsT0FDRFgsRUFBSUEsY0FBRVksU0FBQSxZQUFOWixFQUFBLGNBRU9hLFlBQUEsWUFFTixJQUFBYixFQUFBLDBCQUFBYyxPQUFBSCxPQUhDWCxFQUFFLGNBQWNZLFNBQVMsWUFNekJaLEVBQUUsY0FBQWEsWUFBMEIsWUFEb0IsSUFBOUNiLEVBQUUsMEJBQTBCVSxPQUFPQyxRQUE4RCxJQUE5Q1gsRUFBRSwwQkFBMEJjLE9BQU9ILFFBSzVGWCxFQUFBLGlCQUFtQmUsU0FBTyxZQXJJMUJmLEVBQUVnQixVQUFVQyxhQUtaakIsRUFBRSxlQUFla0IsT0FDZkMsTUFBTSxFQUROQyxVQUFB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aUIsR0FDQW5ELElBQUVnRyxFQUFBN0MsRUFBQWtELGNBQXFCeEYsTUFFckIsR0FBTWdGLE9BQU5HLEVBQU1ILENBQ05TLElBQUFBLEVBQVFDLE9BQVVoRixTQUFBNEMsS0FDaEJtQixPQUFBQSxTQUFRa0IsS0FBQUEsWUFDRUUsSUFBVkEsRUFBVUEsYUFBQUEsSUFBQUEsRUFBQUEsVUFGTTFCLEVBQWxCN0IsR0FJRG5ELEVBQUEsZ0JBQUF1RCxJQUFBeUMsRUFBQVYsUUFiTEEsRUFBQW5DLEVBQUE2QyxFQUFBVixPQUFBLG9CQWVEYSxJQUFBSCxFQUFBVixhQUFBYSxJQUFBSCxFQUFBVSxXQS9CRzFCLEVBQWlCN0IsR0FpQ3JCbkQsRUFBQSxnQkFBQXVELElBQXVCeUMsRUFBQVYsUUFDbkJsQyxFQUFGRCxFQUFBNkMsRUFBQVYsT0FBQVUsRUFBQVUsU0FBQSxpQkFodEJGIiwiZmlsZSI6InNjcmlwdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGZ1bmN0aW9uKCkge1xuXG4gIHZhciBtZWRpYUVsZSA9IG51bGw7XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgZm91bmRhdGlvblxuICAgKi9cbiAgJChkb2N1bWVudCkuZm91bmRhdGlvbigpO1xuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHNsaWRlclxuICAgKi9cbiAgJCgnLnNjcmVlblRleHQnKS5zbGljayh7XG4gICAgZG90czogdHJ1ZSxcbiAgICBpbmZpbml0ZTogdHJ1ZSxcbiAgICBzcGVlZDogNTAwLFxuICAgIGZhZGU6IHRydWUsXG4gICAgY3NzRWFzZTogJ2xpbmVhcidcbiAgfSk7XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgYXVkaW8gcGxheWVyXG4gICAqL1xuICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoJ3BsYXknKSkge1xuICAgICQoJyNhdWRpb1BsYXllcicpLm1lZGlhZWxlbWVudHBsYXllcih7XG4gICAgICBzdHJldGNoaW5nOiAncmVzcG9uc2l2ZScsXG4gICAgICBwbHVnaW5QYXRoOiAnLi4vanMvbGliL2J1aWxkLycsXG4gICAgICAvLyBXaGVuIHVzaW5nIGpRdWVyeSdzIGBtZWRpYWVsZW1lbnRwbGF5ZXJgLCBhbiBgaW5zdGFuY2VgIGFyZ3VtZW50XG4gICAgICAvLyBpcyBhdmFpbGFibGUgaW4gdGhlIGBzdWNjZXNzYCBjYWxsYmFja1xuICAgICAgc3VjY2VzczogZnVuY3Rpb24obWVkaWFFbGVtZW50LCBvcmlnaW5hbE5vZGUsIGluc3RhbmNlKSB7XG4gICAgICAgIG1lZGlhRWxlID0gbWVkaWFFbGVtZW50O1xuICAgICAgICBoaWdoTGlnaHRQcmV2TmV4dCgpO1xuXG4gICAgICAgIG1lZGlhRWxlLnBsYXkoKTtcblxuICAgICAgICAkKG1lZGlhRWxlKS5vbigncGxheWluZycsICgpID0+IHtcbiAgICAgICAgICBjb25zdCB0cmFja0lkID0gJCgnbGkudHJhY2tMaXN0LmhpZ2hsaWdodCcpLmF0dHIoJ2lkJyk7XG4gICAgICAgICAgdXBkYXRlTm9PZlBsYXlzKHRyYWNrSWQpO1xuICAgICAgICAgICQobWVkaWFFbGUpLm9mZigncGxheWluZycpO1xuXG4gICAgICAgIH0pO1xuICAgICAgICAkKG1lZGlhRWxlbWVudCkub24oJ2VuZGVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKCQoJyN0cmFja1NodWZmbGUnKS5oYXNDbGFzcygnYWN0aXZlJykpIHtcbiAgICAgICAgICAgIGNvbnN0IGxpQ291bnQgPSAkKCdsaS50cmFja0xpc3QnKS5sZW5ndGg7XG4gICAgICAgICAgICBjb25zdCByYW5kb20gPSBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogbGlDb3VudCkgKyAxKTtcbiAgICAgICAgICAgIHZhciBsaUVsZSA9ICQoJ2xpLnRyYWNrTGlzdDpudGgtY2hpbGQoJyArIHJhbmRvbSArICcpJyk7XG5cblxuICAgICAgICAgICAgaWYgKGxpRWxlLmhhc0NsYXNzKCdoaWdobGlnaHQnKSkge1xuICAgICAgICAgICAgICBsaUVsZSA9IGxpRWxlLm5leHQoKTtcbiAgICAgICAgICAgICAgaWYgKGxpRWxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGxpRWxlID0gJCgnbGkudHJhY2tMaXN0Om50aC1jaGlsZCgxKScpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxpRWxlLmNsaWNrKCk7XG4gICAgICAgICAgICBoaWdoTGlnaHRQcmV2TmV4dCgpO1xuXG4gICAgICAgICAgICAvL3VwZGF0ZSBwbGF5IGNvdW50XG4gICAgICAgICAgICAvLyBjb25zdCB0cmFja0lkID0gJCgnbGkudHJhY2tMaXN0LmhpZ2hsaWdodCcpLmF0dHIoJ2lkJyk7XG4gICAgICAgICAgICAvLyB1cGRhdGVOb09mUGxheXModHJhY2tJZCk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGxpRWxlID0gJCgnbGkudHJhY2tMaXN0LmhpZ2hsaWdodCcpLm5leHQoKTtcblxuICAgICAgICAgICAgaWYgKCQoJyN0cmFja1JlcGVhdCcpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xuICAgICAgICAgICAgICBtZWRpYUVsZW1lbnQucGxheSgpO1xuICAgICAgICAgICAgICAvL3VwZGF0ZSBwbGF5IGNvdW50XG4gICAgICAgICAgICAgIGNvbnN0IHRyYWNrSWQgPSAkKCdsaS50cmFja0xpc3QuaGlnaGxpZ2h0JykuYXR0cignaWQnKTtcbiAgICAgICAgICAgICAgdXBkYXRlTm9PZlBsYXlzKHRyYWNrSWQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKGxpRWxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGNhbGxGb2N1cygkKCdsaS50cmFja0xpc3QnKS5maXJzdCgpKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaUVsZS5jbGljaygpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoaWdoTGlnaHRQcmV2TmV4dCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgZXJyb3I6IGZ1bmN0aW9uKG1lZGlhRWxlbWVudCwgb3JpZ2luYWxOb2RlKSB7XG4gICAgICAgIGFsZXJ0KCdUaGVyZSBpcyBzb21lIGVycm9yIGF0IHRoZSBzZXJ2ZXIgcGxheWluZyB0aGUgdHJhY2shJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVOb09mUGxheXModHJhY2tJZCkge1xuICAgICQucG9zdChgL3VwZGF0ZS9wbGF5Q291bnQvJHt0cmFja0lkfWApXG4gICAgLmZhaWwoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgfSlcbiAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgIH0pO1xuXG4gIH1cblxuICBmdW5jdGlvbiBzaHVmZmxlVHJhY2tzKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdpbmFjdGl2ZScpKSB7XG4gICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5UHJldmlvdXMoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ2luYWN0aXZlJykpIHtcbiAgICAgIHZhciBsaUVsZSA9ICQoJ2xpLnRyYWNrTGlzdC5oaWdobGlnaHQnKS5wcmV2KCk7XG4gICAgICBsaUVsZS5jbGljaygpO1xuICAgICAgaGlnaExpZ2h0UHJldk5leHQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5TmV4dChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICghJCh0aGlzKS5oYXNDbGFzcygnaW5hY3RpdmUnKSkge1xuICAgICAgdmFyIGxpRWxlID0gJCgnbGkudHJhY2tMaXN0LmhpZ2hsaWdodCcpLm5leHQoKTtcbiAgICAgIGxpRWxlLmNsaWNrKCk7XG4gICAgICBoaWdoTGlnaHRQcmV2TmV4dCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhpZ2hMaWdodFByZXZOZXh0KCkge1xuICAgIGlmICgkKCdsaS50cmFja0xpc3QuaGlnaGxpZ2h0JykucHJldigpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgJCgnI3RyYWNrUHJldicpLmFkZENsYXNzKCdpbmFjdGl2ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcjdHJhY2tQcmV2JykucmVtb3ZlQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgfVxuICAgIGlmICgkKCdsaS50cmFja0xpc3QuaGlnaGxpZ2h0JykubmV4dCgpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgJCgnI3RyYWNrTmV4dCcpLmFkZENsYXNzKCdpbmFjdGl2ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKCcjdHJhY2tOZXh0JykucmVtb3ZlQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgaWYgKCQoJ2xpLnRyYWNrTGlzdC5oaWdobGlnaHQnKS5wcmV2KCkubGVuZ3RoID09PSAwICYmICQoJ2xpLnRyYWNrTGlzdC5oaWdobGlnaHQnKS5uZXh0KCkubGVuZ3RoID09PSAwKSB7XG4gICAgICAkKCcjdHJhY2tTaHVmZmxlJykuYWRkQ2xhc3MoJ2luYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2FsbEZvY3VzKGxpRWxlKSB7XG4gICAgJCgnLnRyYWNrTGlzdCcpLnJlbW92ZUNsYXNzKCdoaWdobGlnaHQnKTtcbiAgICAkKCcudHJhY2tJdGVtJykucmVtb3ZlQ2xhc3MoJ2ZpLXNvdW5kJyk7XG4gICAgbGlFbGUuYWRkQ2xhc3MoJ2hpZ2hsaWdodCcpO1xuICAgIGxpRWxlLmZpbmQoJy50cmFja0l0ZW0nKS5hZGRDbGFzcygnZmktc291bmQnKTtcbiAgICBjb25zdCB0cmFja1NyYyA9IGxpRWxlLmRhdGEoJ3RyYWNrLXNyYycpO1xuICAgIC8vIGNvbnN0IHN0ciA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcbiAgICAvLyBjb25zdCBwYXRoID0gc3RyLnN1YnN0cigwLCBzdHIubGFzdEluZGV4T2YoXCIvXCIpICsgMSk7XG4gICAgLy8gY29uc3QgdHJhY2tJZCA9IGxpRWxlLmF0dHIoJ2lkJyk7XG4gICAgbWVkaWFFbGUuc2V0U3JjKHRyYWNrU3JjKTtcbiAgICBtZWRpYUVsZS5sb2FkKCk7XG4gICAgLy9oaXN0b3J5LnB1c2hTdGF0ZSh0cmFja0lkLCAnJywgcGF0aCArIHRyYWNrSWQpO1xuICAgICQobWVkaWFFbGUpLm9uKCdwbGF5aW5nJywgKCkgPT4ge1xuICAgICAgLy91cGRhdGUgcGxheSBjb3VudFxuICAgICAgY29uc3QgdHJhY2tJZCA9IGxpRWxlLmF0dHIoJ2lkJyk7XG4gICAgICB1cGRhdGVOb09mUGxheXModHJhY2tJZCk7XG4gICAgICAkKG1lZGlhRWxlKS5vZmYoJ3BsYXlpbmcnKTtcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGZ1bmN0aW9uc1xuICAgKi9cbiAgJCh3aW5kb3cpLm9uKCdsb2FkIHJlc2l6ZScsIGhhbmRsZUxvYWQpO1xuICAkKCcjbG9naW4nKS5vbignc3VibWl0JywgaGFuZGxlTG9naW4pOyAvKiBvbiBsb2dpbiAqL1xuICAkKCcjZWRpdFByb2ZpbGUnKS5vbignc3VibWl0JywgaGFuZGxlVXBkYXRlUHJvZmlsZSk7IC8qIHVwZGF0ZSBwcm9maWxlICovXG4gICQoJyNjb25maXJtVXNlcicpLm9uKCdzdWJtaXQnLCBoYW5kbGVWZXJpZnlVc2VyKTsgLyogdmVyaWZ5IHVzZXIgKi9cbiAgJCgnI2ZvcmdvdFBhc3N3b3JkJykub24oJ3N1Ym1pdCcsIGhhbmRsZVVwZGF0ZVBhc3N3b3JkKTsgLyogcG9zdCB1cGRhdGUgcGFzc3dvcmQgKi9cbiAgJCgnI3NpZ251cCcpLm9uKCdzdWJtaXQnLCBoYW5kbGVTaWduVXApOyAvKiBTaWduIHVwICovXG4gICQoJyNyZXNldCcpLm9uKCdjbGljaycsIGNsZWFyTWVzc2FnZSk7IC8qIENsZWFyIG1lc3NhZ2VzIG9uIGNsaWNrIG9mIHJlc2V0ICovXG4gICQoJyNjaGFuZ2VQYXNzd29yZCcpLm9uKCdzdWJtaXQnLCBoYW5kbGVDaGFuZ2VQYXNzd29yZCk7IC8qIHBvc3QgY2hhbmdlIHBhc3N3b3JkICovXG4gICQoJyNzZWFyY2hJY29uJykub24oJ2NsaWNrJywgZGlzcGxheVNlYXJjaEJhcik7XG4gICQoJy5qcy1zZWFyY2gtY2xvc2UnKS5vbignY2xpY2snLCBoaWRlU2VhcmNoQmFyKTtcbiAgJCgnLm1lbnVEaXYnKS5vbignY2xpY2snLCBzaG93VXNlck1lbnVEKTtcbiAgJCgnLnRyYWNrTGlzdCcpLm9uKCdjbGljaycsIGNoYW5nZVRyYWNrKTsgLyogY2hhbmdlIHRyYWNrIG9uIGNsaWNrICovXG4gICQoJyNzZWFyY2gtdGV4dCcpLm9uKCdrZXl1cCcsIGNhbGxTZWFyY2gpOyAvKiBzZWFyY2ggZnVuY3Rpb25hbGl0eSAqL1xuICAkKCcuanMtc2VhcmNoLWljb24nKS5vbignY2xpY2snLCBzZWFyY2gpOyAvKiBzZWFyY2ggZnVuY3Rpb25hbGl0eSAqL1xuICAkKCcjdHJhY2tSZXBlYXQnKS5vbignY2xpY2snLCBsaW5rQWN0aXZlKTtcbiAgJCgnI3RyYWNrTGlrZScpLm9uKCdjbGljaycsIGxpbmtBY3RpdmUpO1xuICAkKCcjdHJhY2tQcmV2Jykub24oJ2NsaWNrJywgcGxheVByZXZpb3VzKTsgLyogcGxheSBwcmV2aW91cyB0cmFjayAqL1xuICAkKCcjdHJhY2tOZXh0Jykub24oJ2NsaWNrJywgcGxheU5leHQpOyAvKiBwbGF5IG5leHQgdHJhY2sgKi9cbiAgJCgnI3RyYWNrU2h1ZmZsZScpLm9uKCdjbGljaycsIHNodWZmbGVUcmFja3MpOyAvKiBzaHVmZmxlIHRyYWNrcyovXG4gICQoJy5wbGF5TGlzdENyZWF0ZScpLm9uKCdjbGljaycsIGNyZWF0ZVBsYXlsaXN0KTsgLyogQ3JlYXRlIHBsYXlsaXN0ICovXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcubWVudU1vZGUnLCBzaG93VXNlck1lbnUpO1xuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNsb3NlLWljb24nLCBoaWRlVXNlck1lbnUpO1xuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLnNlZUFsbFInLCBzZWVBbGxSZXN1bHRzKTsgLyogc2VlIGFsbCB0aGUgdHJhY2tzIG9mIHNlYXJjaCByZXN1bHRzICovXG5cblxuICB2YXIgdXNlciA9IG51bGw7XG5cblxuICAvKiBmdW5jdGlvbnMgKi9cbiAgZnVuY3Rpb24gaGFuZGxlTG9hZCgpIHtcbiAgICBjb25zdCBmb290ZXIgPSAkKCcjZm9vdGVyJyk7XG4gICAgaWYgKCQoJy50aXRsZS1iYXInKS5pcygnOnZpc2libGUnKSkge1xuICAgICAgJCgnI2luZGV4LW1lbnUnKS5yZW1vdmVDbGFzcygnYWRkRmxvYXQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJCgnI2luZGV4LW1lbnUnKS5hZGRDbGFzcygnYWRkRmxvYXQnKTtcbiAgICB9XG4gICAgdmFyIHdpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgaWYgKHdpZHRoIDwgNDAwKSB7XG4gICAgICAkKCcubWVudURpdicpLmFkZENsYXNzKCdtZW51TW9kZScpO1xuICAgICAgJCgnI3VzZXItbWVudScpLmFkZENsYXNzKCdtZW51TW9kJyk7XG4gICAgICAkKCcjdXNlci1tZW51JykucmVtb3ZlQ2xhc3MoJ3Nob3cnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJCgnI3VzZXItbWVudScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAkKCcjdXNlci1tZW51JykuY3NzKCd3aWR0aCcsICcxODBweCcpO1xuICAgICAgJCgnLmNsb3NlLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICQoJy5tZW51RGl2JykucmVtb3ZlQ2xhc3MoJ21lbnVNb2RlJyk7XG4gICAgICAkKCcjdXNlci1tZW51JykucmVtb3ZlQ2xhc3MoJ21lbnVNb2QnKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVMb2dpbihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNsZWFyTWVzc2FnZSgpO1xuICAgIGNvbnN0IG5hbWUgPSAkKCcjdXNlck5hbWUnKS52YWwoKTtcbiAgICBjb25zdCBwd2QgPSAkKCcjdXNlclBhc3N3b3JkJykudmFsKCk7XG5cbiAgICBpZiAobmFtZS5sZW5ndGggIT09IDAgJiYgcHdkLmxlbmd0aCAhPT0gMCkge1xuICAgICAgY29uc3QgdXNlck5hbWVSZWdleCA9IC9eW2EtekEtWjAtOS5fXXsxLDMwfSQvO1xuICAgICAgY29uc3QgbmFtZVZlcmlmaWVzID0gdXNlck5hbWVSZWdleC50ZXN0KG5hbWUpO1xuXG4gICAgICBpZiAobmFtZVZlcmlmaWVzKSB7XG4gICAgICAgICQucG9zdCgnL2xvZ2luJywge1xuICAgICAgICAgICAgdXNlcm5hbWU6IG5hbWUsXG4gICAgICAgICAgICBwYXNzd29yZDogcHdkXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZVRleHQgPSBkYXRhLnJlc3BvbnNlSlNPTjtcbiAgICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PT0gNDAwKSB7XG4gICAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dFswXS5tc2csICdlcnJvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0Lm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICcvdXNlci9ob21lJztcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlck5hbWUnKTtcbiAgICAgICAgc2hvd01lc3NhZ2UoJ1VzZXJuYW1lcyBjYW4gb25seSB1c2UgbGV0dGVycywgbnVtYmVycywgdW5kZXJzY29yZXMgYW5kIHBlcmlvZHMuJywgJ2Vycm9yJyk7XG5cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuXG4gICAgICBpZiAobmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VyTmFtZScpO1xuICAgICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgfVxuICAgICAgaWYgKHB3ZC5sZW5ndGggPT0gMCkge1xuICAgICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJQYXNzd29yZCcpO1xuICAgICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVVwZGF0ZVByb2ZpbGUoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNsZWFyTWVzc2FnZSgpO1xuXG4gICAgY29uc3QgdXNlcm5hbWUgPSAkKCcjdXNlck5hbWUnKS52YWwoKTtcbiAgICBjb25zdCBlbWFpbCA9ICQoJyNlbWFpbCcpLnZhbCgpO1xuXG4gICAgaWYgKHVzZXJuYW1lLmxlbmd0aCAhPT0gMCAmJiBlbWFpbC5sZW5ndGggIT09IDApIHtcblxuICAgICAgY29uc3QgcGF0dGVybiA9IC9eW2EtekEtWjAtOS5fXXsxLDMwfSQvO1xuICAgICAgY29uc3QgbmFtZVZlcmlmaWVzID0gcGF0dGVybi50ZXN0KHVzZXJuYW1lKTtcbiAgICAgIGlmIChuYW1lVmVyaWZpZXMpIHtcbiAgICAgICAgJC5wb3N0KCcvdXNlci9lZGl0UHJvZmlsZScsIHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgIGVtYWlsOiBlbWFpbFxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZhaWwoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSA0MDApIHtcbiAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICAgIGlmIChyZXNwb25zZVRleHQubGVuZ3RoID49IDEpIHtcbiAgICAgICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHRbMF0ubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHQubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgc2hvd01lc3NhZ2UoZGF0YS5tc2csICdtc2cnKTtcbiAgICAgICAgICAgICQoJyNsb2dpbkxpbmsnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgJCgnLmJ0bnMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VyTmFtZScpO1xuICAgICAgICBzaG93TWVzc2FnZSgnVXNlcm5hbWVzIGNhbiBvbmx5IHVzZSBsZXR0ZXJzLCBudW1iZXJzLCB1bmRlcnNjb3JlcyBhbmQgcGVyaW9kcy4nLCAnZXJyb3InKTtcblxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodXNlcm5hbWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHNob3dFcnJvckNpcmNsZSgndXNlck5hbWUnKTtcbiAgICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIH1cbiAgICAgIGlmIChlbWFpbC5sZW5ndGggPT0gMCkge1xuICAgICAgICBzaG93RXJyb3JDaXJjbGUoJ2VtYWlsJyk7XG4gICAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlVmVyaWZ5VXNlcihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY2xlYXJNZXNzYWdlKCk7XG5cbiAgICBjb25zdCB1c2VybmFtZSA9ICQoJyN1c2VybmFtZScpLnZhbCgpO1xuXG4gICAgaWYgKHVzZXJuYW1lLmxlbmd0aCAhPT0gMCkge1xuXG4gICAgICAkLnBvc3QoJy92ZXJpZnlVc2VyJywge1xuICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZVxuICAgICAgICB9KVxuICAgICAgICAuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGRhdGEucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0Lm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgJCgnI3VzZXJuYW1lJykudmFsKCcnKTtcbiAgICAgICAgICAkKCcjZm9yZ290UGFzc3dvcmQnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAgICQoJyNjb25maXJtVXNlcicpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgdXNlciA9IGRhdGE7XG4gICAgICAgIH0pO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh1c2VybmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VybmFtZScpO1xuICAgICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVVwZGF0ZVBhc3N3b3JkKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY2xlYXJNZXNzYWdlKCk7XG5cbiAgICBjb25zdCBuZXdQd2QgPSAkKCcjbmV3UGFzc3dvcmQnKS52YWwoKTtcbiAgICBjb25zdCBjb25maXJtUHdkID0gJCgnI2NvbmZpcm1QYXNzd29yZCcpLnZhbCgpO1xuXG4gICAgaWYgKG5ld1B3ZC5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnbmV3UGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpcm1Qd2QubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ2NvbmZpcm1QYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAobmV3UHdkLmxlbmd0aCAhPT0gMCAmJiBjb25maXJtUHdkICE9PSBuZXdQd2QpIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnY29uZmlybVBhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgc2hvd01lc3NhZ2UoJ0NvbmZpcm0gcGFzc3dvcmQgZG9lc25cXCd0IG1hdGNoIHdpdGggdGhlIG5ldyBwYXNzd29yZCcsICdlcnJvcicpO1xuICAgIH1cblxuICAgIGlmIChuZXdQd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1Qd2QubGVuZ3RoICE9PSAwICYmIG5ld1B3ZCA9PT0gY29uZmlybVB3ZCkge1xuICAgICAgJC5wb3N0KCcvZm9yZ290UGFzc3dvcmQnLCB7XG4gICAgICAgICAgbmV3UGFzc3dvcmQ6IG5ld1B3ZCxcbiAgICAgICAgICB1c2VyOiB1c2VyXG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBzaG93TWVzc2FnZShyZXNwb25zZVRleHQubXNnLCAnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBzaG93TWVzc2FnZShkYXRhLm1zZywgJ21zZycpO1xuICAgICAgICAgICQoJy5idG5zJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAkKCcjbG9naW5MaW5rJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2hhbmdlUGFzc3dvcmQoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjbGVhck1lc3NhZ2UoKTtcblxuICAgIGNvbnN0IG9sZFB3ZCA9ICQoJyNvbGRQYXNzd29yZCcpLnZhbCgpO1xuICAgIGNvbnN0IG5ld1B3ZCA9ICQoJyNuZXdQYXNzd29yZCcpLnZhbCgpO1xuICAgIGNvbnN0IGNvbmZpcm1Qd2QgPSAkKCcjY29uZmlybVBhc3N3b3JkJykudmFsKCk7XG5cbiAgICBpZiAob2xkUHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCdvbGRQYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAobmV3UHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCduZXdQYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlybVB3ZC5sZW5ndGggPT09IDApIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnY29uZmlybVBhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmIChuZXdQd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1Qd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1Qd2QgIT09IG5ld1B3ZCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCdjb25maXJtUGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICBzaG93TWVzc2FnZSgnQ29uZmlybSBwYXNzd29yZCBkb2VzblxcJ3QgbWF0Y2ggd2l0aCB0aGUgbmV3IHBhc3N3b3JkJywgJ2Vycm9yJyk7XG4gICAgICBpZiAob2xkUHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvbGRQd2QubGVuZ3RoICE9PSAwICYmIG5ld1B3ZC5sZW5ndGggIT09IDAgJiYgY29uZmlybVB3ZC5sZW5ndGggIT09IDAgJiYgbmV3UHdkID09PSBjb25maXJtUHdkKSB7XG4gICAgICAkLnBvc3QoJy91c2VyL2NoYW5nZVBhc3N3b3JkJywge1xuICAgICAgICAgIG9sZFBhc3N3b3JkOiBvbGRQd2QsXG4gICAgICAgICAgbmV3UGFzc3dvcmQ6IG5ld1B3ZFxuICAgICAgICB9KVxuICAgICAgICAuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSA0MDApIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGRhdGEucmVzcG9uc2VKU09OO1xuICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0Lm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgc2hvd01lc3NhZ2UoZGF0YS5tc2csICdtc2cnKTtcbiAgICAgICAgICAkKCcuYnRucycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgJCgnI2xvZ2luTGluaycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVNpZ25VcChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNsZWFyTWVzc2FnZSgpO1xuXG4gICAgY29uc3QgbmFtZSA9ICQoXCIjdXNlck5hbWVcIikudmFsKCk7XG4gICAgY29uc3QgZW1haWwgPSAkKFwiI3VzZXJFbWFpbFwiKS52YWwoKTtcbiAgICBjb25zdCBwd2QgPSAkKFwiI3VzZXJQYXNzd29yZFwiKS52YWwoKTtcbiAgICBjb25zdCBjb25maXJtcHdkID0gJChcIiNjb25maXJtUGFzc3dvcmRcIikudmFsKCk7XG4gICAgY29uc3QgdXNlck5hbWVSZWdleCA9IC9eW2EtekEtWjAtOS5fXXsxLDMwfSQvO1xuICAgIGNvbnN0IG5hbWVWZXJpZmllcyA9IHVzZXJOYW1lUmVnZXgudGVzdChuYW1lKTtcblxuXG4gICAgaWYgKG5hbWUubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJOYW1lJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGlmICghbmFtZVZlcmlmaWVzICYmIG5hbWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJOYW1lJyk7XG4gICAgICBzaG93TWVzc2FnZSgnVXNlcm5hbWVzIGNhbiBvbmx5IHVzZSBsZXR0ZXJzLCBudW1iZXJzLCB1bmRlcnNjb3JlcyBhbmQgcGVyaW9kcy4nLCAnZXJyb3InKTtcbiAgICB9XG5cbiAgICBpZiAoZW1haWwubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ3VzZXJFbWFpbCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAocHdkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2hvd0Vycm9yQ2lyY2xlKCd1c2VyUGFzc3dvcmQnKTtcbiAgICAgICQoJyNlbXB0eUZpZWxkcycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpcm1wd2QubGVuZ3RoID09PSAwKSB7XG4gICAgICBzaG93RXJyb3JDaXJjbGUoJ2NvbmZpcm1QYXNzd29yZCcpO1xuICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpZiAocHdkLmxlbmd0aCAhPT0gMCAmJiBjb25maXJtcHdkLmxlbmd0aCAhPT0gMCAmJiBjb25maXJtcHdkICE9PSBwd2QpIHtcbiAgICAgIHNob3dFcnJvckNpcmNsZSgnY29uZmlybVBhc3N3b3JkJyk7XG4gICAgICAkKCcjZW1wdHlGaWVsZHMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgc2hvd01lc3NhZ2UoJ0NvbmZpcm0gcGFzc3dvcmQgZG9lc25cXCd0IG1hdGNoIHdpdGggcGFzc3dvcmQnLCAnZXJyb3InKTtcbiAgICAgIGlmIChlbWFpbC5sZW5ndGggPT09IDAgfHwgbmFtZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgJCgnI2VtcHR5RmllbGRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdCBlcnJvciA9ICdVc2VybmFtZXMgY2FuIG9ubHkgdXNlIGxldHRlcnMsIG51bWJlcnMsIHVuZGVyc2NvcmVzIGFuZCBwZXJpb2RzLic7XG4gICAgLy8gY29uc3QgbmFtZSA9ICdPTElWRSc7XG4gICAgLy8gY29uc3QgcHdkID0gJ09MSVZFJztcbiAgICAvLyBjb25zdCBlbWFpbCA9ICdnZWV0YUBnbWFpbC5jb20nO1xuICAgIGlmIChuYW1lLmxlbmd0aCAhPT0gMCAmJiBwd2QubGVuZ3RoICE9PSAwICYmIGNvbmZpcm1wd2QubGVuZ3RoICE9PSAwICYmXG4gICAgICBlbWFpbC5sZW5ndGggIT09IDAgJiYgcHdkID09PSBjb25maXJtcHdkICYmIG5hbWVWZXJpZmllcykge1xuICAgICAgJC5wb3N0KCcvc2lnbnVwJywge1xuICAgICAgICAgIHVzZXJuYW1lOiBuYW1lLFxuICAgICAgICAgIHBhc3N3b3JkOiBwd2QsXG4gICAgICAgICAgZW1haWw6IGVtYWlsXG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gZGF0YS5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBpZiAocmVzcG9uc2VUZXh0Lmxlbmd0aCA+PSAxKSB7XG4gICAgICAgICAgICAgIHNob3dNZXNzYWdlKHJlc3BvbnNlVGV4dFswXS5tc2csICdlcnJvcicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2hvd01lc3NhZ2UocmVzcG9uc2VUZXh0Lm1zZywgJ2Vycm9yJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgc2hvd01lc3NhZ2UoZGF0YS5tc2csICdtc2cnKTtcbiAgICAgICAgICAkKCcuYnRucycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgJCgnI2xvZ2luTGluaycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGRpc3BsYXlTZWFyY2hCYXIoZSkge1xuICAgIGlmIChlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgJCgnI2hlYWRlckRpdicpLnJlbW92ZUNsYXNzKCdzaG93JykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcjc2VhcmNoJykuYWRkQ2xhc3MoJ3Nob3cnKTtcblxuICAgIC8qIGhpZGUgcmVzdCBvZiBkYXRhIGZvciBzZWFyY2ggdmlldyAqL1xuICAgICQoJy5qcy1ub25TZWFyY2hWaWV3JykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcuanMtc2VhcmNoVmlldycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gIH1cblxuICBmdW5jdGlvbiBoaWRlU2VhcmNoQmFyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgJCgnI3NlYXJjaC10ZXh0JykudmFsKCcnKTtcbiAgICAkKCcjaGVhZGVyRGl2JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKS5hZGRDbGFzcygnc2hvdycpO1xuICAgICQoJyNzZWFyY2gnKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuXG4gICAgLyogc2hvdyByZXN0IG9mIGRhdGEgYW5kIGhpZGUgc2VhcmNoIHZpZXcqL1xuICAgICQoJy5qcy1ub25TZWFyY2hWaWV3JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcuanMtc2VhcmNoVmlldycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgLy8kKCcuanMtc2VhcmNoVmlldycpLmVtcHR5KCk7XG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKCd1c2VyJykgPT09IC0xKSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgPSAnL3VzZXIvaG9tZSc7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2hvd1VzZXJNZW51RChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHVzZXJJY29uID0gJCgnI3VzZXItbWVudScpO1xuICAgIGlmICghdXNlckljb24uaGFzQ2xhc3MoJ3Nob3cnKSkge1xuICAgICAgJCgnI3VzZXItbWVudScpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJyN1c2VyLW1lbnUnKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gc2hvd1VzZXJNZW51KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdXNlckljb24gPSAkKCcjdXNlci1tZW51Jyk7XG4gICAgJCgnI3VzZXItbWVudScpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgdXNlckljb24uY3NzKCd3aWR0aCcsICcyNTBweCcpO1xuICAgIHVzZXJJY29uLnByZXBlbmQoJzxkaXYgY2xhc3M9XCJjbG9zZS1pY29uXCI+PGkgY2xhc3M9XCJmaS14XCI+PC9pPjwvZGl2PicpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZVVzZXJNZW51KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdXNlckljb24gPSAkKCcjdXNlci1tZW51Jyk7XG4gICAgJCgnI3VzZXItbWVudScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgdXNlckljb24uY3NzKCd3aWR0aCcsICcxODBweCcpO1xuICAgICQoJy5jbG9zZS1pY29uJykucmVtb3ZlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBjaGFuZ2VUcmFjayhlKSB7XG4gICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdoaWdobGlnaHQnKSkge1xuICAgICAgLy8gY29uc29sZS5sb2coMSk7XG4gICAgICAkKCcudHJhY2tMaXN0JykucmVtb3ZlQ2xhc3MoJ2hpZ2hsaWdodCcpO1xuICAgICAgJCgnLnRyYWNrSXRlbScpLnJlbW92ZUNsYXNzKCdmaS1zb3VuZCcpO1xuICAgICAgJCh0aGlzKS5hZGRDbGFzcygnaGlnaGxpZ2h0Jyk7XG4gICAgICAkKHRoaXMpLmZpbmQoJy50cmFja0l0ZW0nKS5hZGRDbGFzcygnZmktc291bmQnKTtcbiAgICAgIGNvbnN0IHRyYWNrU3JjID0gJCh0aGlzKS5kYXRhKCd0cmFjay1zcmMnKTtcbiAgICAgIC8vY29uc3Qgc3RyID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xuICAgICAgLy9jb25zdCBwYXRoID0gc3RyLnN1YnN0cigwLCBzdHIubGFzdEluZGV4T2YoXCIvXCIpICsgMSk7XG4gICAgICAvL2NvbnN0IHRyYWNrSWQgPSAkKHRoaXMpLmF0dHIoJ2lkJyk7XG4gICAgICBtZWRpYUVsZS5zZXRTcmModHJhY2tTcmMpO1xuICAgICAgbWVkaWFFbGUubG9hZCgpO1xuICAgICAgbWVkaWFFbGUucGxheSgpO1xuICAgICAgLy9oaXN0b3J5LnB1c2hTdGF0ZSh0cmFja0lkLCAnJywgcGF0aCArIHRyYWNrSWQpO1xuICAgICAgY29uc3QgdHJhY2tJZCA9ICQodGhpcykuYXR0cignaWQnKTtcbiAgICAgIHVwZGF0ZU5vT2ZQbGF5cyh0cmFja0lkKTtcbiAgICB9XG5cbiAgfVxuXG4gIC8qKlxuICAgKiBvbiBwb3BzdGF0ZSBoaWdobGlnaHQgdGhlIHByb3BlciB0cmFja1xuICAgKi9cbiAgLy8gJCh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGZ1bmN0aW9uKGUpIHtcbiAgLy8gICBjb25zdCB0cmFja0lkID0gZS5vcmlnaW5hbEV2ZW50LnN0YXRlO1xuICAvLyAgIGlmICh0cmFja0lkICE9PSBudWxsKSB7XG4gIC8vICAgICBjb25zdCB0cmFja1NyYyA9ICQoYCMke3RyYWNrSWR9YCkuZGF0YSgndHJhY2stc3JjJyk7XG4gIC8vICAgICAkKCcudHJhY2tMaXN0JykucmVtb3ZlQ2xhc3MoJ2hpZ2hsaWdodCcpO1xuICAvLyAgICAgJCgnLnRyYWNrSXRlbScpLnJlbW92ZUNsYXNzKCdmaS1zb3VuZCcpO1xuICAvLyAgICAgJChgIyR7dHJhY2tJZH1gKS5hZGRDbGFzcygnaGlnaGxpZ2h0Jyk7XG4gIC8vICAgICAkKGAjJHt0cmFja0lkfWApLmZpbmQoJy50cmFja0l0ZW0nKS5hZGRDbGFzcygnZmktc291bmQnKTtcbiAgLy9cbiAgLy8gICAgIG1lZGlhRWxlLnNldFNyYyh0cmFja1NyYyk7XG4gIC8vICAgICBtZWRpYUVsZS5sb2FkKCk7XG4gIC8vICAgICBtZWRpYUVsZS5wbGF5KCk7XG4gIC8vICAgfSBlbHNlIHtcbiAgLy8gICAgIGNvbnN0IHN0ciA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcbiAgLy8gICAgIGNvbnN0IGlkID0gc3RyLnN1YnN0cihzdHIubGFzdEluZGV4T2YoXCIvXCIpICsgMSwgc3RyLmxlbmd0aCk7XG4gIC8vICAgICBjb25zdCB0cmFja1NyYyA9ICQoYCMke2lkfWApLmRhdGEoJ3RyYWNrLXNyYycpO1xuICAvLyAgICAgJCgnLnRyYWNrTGlzdCcpLnJlbW92ZUNsYXNzKCdoaWdobGlnaHQnKTtcbiAgLy8gICAgICQoJy50cmFja0l0ZW0nKS5yZW1vdmVDbGFzcygnZmktc291bmQnKTtcbiAgLy8gICAgICQoYCMke2lkfWApLmFkZENsYXNzKCdoaWdobGlnaHQnKTtcbiAgLy8gICAgICQoYCMke2lkfWApLmZpbmQoJy50cmFja0l0ZW0nKS5hZGRDbGFzcygnZmktc291bmQnKTtcbiAgLy9cbiAgLy8gICAgIG1lZGlhRWxlLnNldFNyYyh0cmFja1NyYyk7XG4gIC8vICAgICBtZWRpYUVsZS5sb2FkKCk7XG4gIC8vICAgICBtZWRpYUVsZS5wbGF5KCk7XG4gIC8vICAgfVxuICAvLyB9KTtcblxuICAvKipcbiAgICogU2VhcmNoXG4gICAqL1xuICBmdW5jdGlvbiBjYWxsU2VhcmNoKGUpIHtcbiAgICBpZiAoZS5rZXlDb2RlID09PSAxMykge1xuICAgICAgc2VhcmNoKGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNlYXJjaChlLCBzdHIsIHBvcHN0YXRlKSB7XG4gICAgaWYgKGUgIT09IG51bGwpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICAkKCcuanMtc2VhcmNoVmlldycpLmVtcHR5KCk7XG4gICAgdmFyIHNlYXJjaFN0cmluZyA9IChzdHIgIT09IHVuZGVmaW5lZCkgPyBzdHIgOiAkLnRyaW0oJCgnI3NlYXJjaC10ZXh0JykudmFsKCkpOyAvKiB0cmltIGJlZ2lubmluZyBhbmQgZW5kaW5nIHNwYWNlcyAqL1xuICAgIHNlYXJjaFN0cmluZyA9IHNlYXJjaFN0cmluZy5yZXBsYWNlKC9cXHMrL2csICcgJyk7XG4gICAgc2VhcmNoU3RyaW5nID0gZW5jb2RlVVJJQ29tcG9uZW50KHNlYXJjaFN0cmluZyk7XG5cbiAgICBpZiAoc2VhcmNoU3RyaW5nLmxlbmd0aCA+IDAgJiYgc2VhcmNoU3RyaW5nICE9PSAnICcpIHtcbiAgICAgICQucG9zdChgL3NlYXJjaC8ke3NlYXJjaFN0cmluZ31gKVxuICAgICAgICAuZmFpbChmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgJCgnI3NlYXJjaENvbnQnKS5odG1sKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgJCgnI3NlYXJjaENvbnQnKS5odG1sKGRhdGEpO1xuICAgICAgICAgICQoJyNqcy1zZWFyY2hSZXN1bHRzJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICBpZiAocG9wc3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3Qgc3RyID0gYC9zZWFyY2gvJHtzZWFyY2hTdHJpbmd9YDtcbiAgICAgICAgICAgIGhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICAgICAgc2VhcmNoOiBkZWNvZGVVUklDb21wb25lbnQoc2VhcmNoU3RyaW5nKVxuICAgICAgICAgICAgfSwgJycsIHN0cik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvLyBjb25zb2xlLmxvZyh3aW5kb3cuaGlzdG9yeS5zdGF0ZSk7XG4gIC8vIGNvbnNvbGUubG9nKHdpbmRvdy5oaXN0b3J5KTtcblxuICBpZiAod2luZG93Lmhpc3Rvcnkuc3RhdGUgIT09IG51bGwpIHtcbiAgICBjb25zdCBzdGF0ZSA9IHdpbmRvdy5oaXN0b3J5LnN0YXRlO1xuICAgIGlmIChzdGF0ZS5zZWFyY2ggIT09IHVuZGVmaW5lZCAmJiBzdGF0ZS5jYXRlZ29yeSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBkaXNwbGF5U2VhcmNoQmFyKCk7XG4gICAgICAkKCcjc2VhcmNoLXRleHQnKS52YWwoc3RhdGUuc2VhcmNoKTtcbiAgICAgIHNlYXJjaChudWxsLCBzdGF0ZS5zZWFyY2gsICdub1BvcHN0YXRlJyk7XG4gICAgfSBlbHNlIGlmIChzdGF0ZS5zZWFyY2ggIT09IHVuZGVmaW5lZCAmJiBzdGF0ZS5jYXRlZ29yeSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBkaXNwbGF5U2VhcmNoQmFyKCk7XG4gICAgICAkKCcjc2VhcmNoLXRleHQnKS52YWwoc3RhdGUuc2VhcmNoKTtcbiAgICAgIHNlZUFsbFJlc3VsdHMobnVsbCwgc3RhdGUuc2VhcmNoLCBzdGF0ZS5jYXRlZ29yeSwgJ25vUG9wc3RhdGUnKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogb24gcG9wc3RhdGUgaGlnaGxpZ2h0IGdldCB0aGUgcHJvcGVyIHZpZXdcbiAgICovXG5cbiAgJCh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGZ1bmN0aW9uKGUpIHtcbiAgICBjb25zdCBzdGF0ZSA9IGUub3JpZ2luYWxFdmVudC5zdGF0ZTtcblxuICAgIGlmIChzdGF0ZSA9PT0gbnVsbCkge1xuICAgICAgY29uc3QgcGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBwYXRoO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUuc2VhcmNoICE9PSB1bmRlZmluZWQgJiYgc3RhdGUuY2F0ZWdvcnkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZGlzcGxheVNlYXJjaEJhcihlKTtcbiAgICAgICQoJyNzZWFyY2gtdGV4dCcpLnZhbChzdGF0ZS5zZWFyY2gpO1xuICAgICAgc2VhcmNoKGUsIHN0YXRlLnNlYXJjaCwgJ25vUG9wc3RhdGUnKTtcbiAgICB9IGVsc2UgaWYgKHN0YXRlLnNlYXJjaCAhPT0gdW5kZWZpbmVkICYmIHN0YXRlLmNhdGVnb3J5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGRpc3BsYXlTZWFyY2hCYXIoZSk7XG4gICAgICAkKCcjc2VhcmNoLXRleHQnKS52YWwoc3RhdGUuc2VhcmNoKTtcbiAgICAgIHNlZUFsbFJlc3VsdHMoZSwgc3RhdGUuc2VhcmNoLCBzdGF0ZS5jYXRlZ29yeSwgJ25vUG9wc3RhdGUnKTtcbiAgICB9XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHNlZUFsbFJlc3VsdHMoZSwgc3JjaFN0ciwgY2F0ZWdyeSwgcG9wc3RhdGUpIHtcbiAgICBpZiAoZSAhPT0gbnVsbCkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIHZhciBzZWFyY2hTdHIgPSAoc3JjaFN0ciAhPT0gdW5kZWZpbmVkKSA/IHNyY2hTdHIgOiAkKCcuc2VhcmNoU3RyJykuaHRtbCgpO1xuICAgIGNvbnN0IGNhdGVnb3J5ID0gKGNhdGVncnkgIT09IHVuZGVmaW5lZCkgPyBjYXRlZ3J5IDogJCh0aGlzKS5kYXRhKCdjYXRlZ29yeScpO1xuXG4gICAgc2VhcmNoU3RyID0gZW5jb2RlVVJJQ29tcG9uZW50KHNlYXJjaFN0cik7XG5cbiAgICAkLnBvc3QoYC9zZWFyY2gvJHtjYXRlZ29yeX0vJHtzZWFyY2hTdHJ9YClcbiAgICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgJCgnI3NlYXJjaENvbnQnKS5odG1sKGRhdGEpO1xuICAgICAgfSlcbiAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgJCgnI3NlYXJjaENvbnQnKS5odG1sKGRhdGEpO1xuICAgICAgICAkKCcjanMtc2VhcmNoUmVzdWx0cycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgIGlmIChwb3BzdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc3Qgc3RyID0gYC9zZWFyY2gvJHtjYXRlZ29yeX0vJHtzZWFyY2hTdHJ9YDtcbiAgICAgICAgICBoaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAgICBzZWFyY2g6IGRlY29kZVVSSUNvbXBvbmVudChzZWFyY2hTdHIpLFxuICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5XG4gICAgICAgICAgfSwgJycsIHN0cik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlua0FjdGl2ZShlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUGxheWxpc3QoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVdGlsaXR5IGZ1bmN0aW9uc1xuICAgKi9cblxuICBmdW5jdGlvbiBjbGVhck1lc3NhZ2UoKSB7XG4gICAgJCgnI2Vycm9yJykuZW1wdHkoKTtcbiAgICAkKCcjbXNnJykuZW1wdHkoKTtcbiAgICAkKCcjZW1wdHlGaWVsZHMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICQoJy5pY29uLWVycm9yJykucmVtb3ZlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzaG93TWVzc2FnZShtc2dUeHQsIG1zZ0Rpdikge1xuICAgIHZhciB1bEVsZSA9ICQoJyNtc2djb250Jyk7XG4gICAgaWYgKHVsRWxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdWxFbGUgPSAkKCc8dWwgaWQ9XFwnbXNnY29udFxcJz48L3VsPicpO1xuICAgIH1cbiAgICB1bEVsZS5hcHBlbmQoJzxsaT4nICsgbXNnVHh0ICsgJzwvbGk+Jyk7XG4gICAgJCgnIycgKyBtc2dEaXYpLmh0bWwodWxFbGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd0Vycm9yQ2lyY2xlKGNpcmNsZUlucCkge1xuICAgIGNvbnN0IGlucEVsZSA9ICQoJyMnICsgY2lyY2xlSW5wKTtcbiAgICBjb25zdCBzcGFuRWxlID0gJCgnPHNwYW4gY2xhc3M9XFwnaWNvbi1lcnJvclxcJz48aSBjbGFzcz1cXCdmaS14LWNpcmNsZVxcJz48L2k+PC9zcGFuPicpO1xuICAgIGlucEVsZS5hZnRlcihzcGFuRWxlKTtcbiAgfVxuXG5cblxuXG59KCkpO1xuIl19
