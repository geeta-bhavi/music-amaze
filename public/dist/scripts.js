"use strict";$(function(){var e=null;$(document).foundation(),$(".screenText").slick({dots:!0,infinite:!0,speed:500,fade:!0,cssEase:"linear"}),window.location.pathname.indexOf("play")&&$("#audioPlayer").mediaelementplayer({stretching:"responsive",pluginPath:"../js/lib/build/",success:function(s,r,n){console.log(s),e=s,$(s).on("ended",function(){var s=$("li.trackList.highlight").next();0===s.length?function(s){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),s.addClass("highlight"),s.find(".trackItem").addClass("fi-sound");var r=s.data("track-src");e.setSrc(r),e.load()}($("li.trackList").first()):s.click()})},error:function(e,s){alert("There is some error at the server playing the track!")}}),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat");$(window).width()<400?($(".menuDiv").addClass("menuMode"),$("#user-menu").removeClass("show")):($("#user-menu").removeClass("show"),$("#user-menu").css("width","180px"),$(".close-icon").remove(),$(".menuDiv").removeClass("menuMode"))}),$("#login").on("submit",function(e){e.preventDefault(),n();var s=$("#userName").val(),r=$("#userPassword").val();if(0!==s.length&&0!==r.length){var t=/^[a-zA-Z0-9._]{1,30}$/.test(s);t?$.post("/login",{username:s,password:r}).fail(function(e){var s=e.responseJSON;400===e.status&&a(s[0].msg,"error"),401===e.status&&a(s.msg,"error")}).done(function(e){window.location.href="/user/home"}):(o("userName"),a("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===s.length&&(o("userName"),$("#emptyFields").removeClass("hide")),0==r.length&&(o("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),n();var s=$("#userName").val(),r=$("#email").val();if(0!==s.length&&0!==r.length){var t=/^[a-zA-Z0-9._]{1,30}$/.test(s);t?$.post("/user/editProfile",{username:s,email:r}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?a(s[0].msg,"error"):a(s.msg,"error")}}).done(function(e){a(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(o("userName"),a("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===s.length&&(o("userName"),$("#emptyFields").removeClass("hide")),0==r.length&&(o("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(e){e.preventDefault(),n();var r=$("#username").val();0!==r.length?$.post("/verifyUser",{username:r}).fail(function(e){if(401===e.status){var s=e.responseJSON;a(s.msg,"error")}}).done(function(e){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),s=e}):0===r.length&&(o("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(e){e.preventDefault(),n();var r=$("#newPassword").val(),t=$("#confirmPassword").val();0===r.length&&(o("newPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(o("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==r.length&&t!==r&&(o("confirmPassword"),$("#emptyFields").addClass("hide"),a("Confirm password doesn't match with the new password","error"));0!==r.length&&0!==t.length&&r===t&&$.post("/forgotPassword",{newPassword:r,user:s}).fail(function(e){if(400===e.status){var s=e.responseJSON;a(s.msg,"error")}}).done(function(e){a(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),n();var s=$("#userName").val(),r=$("#userEmail").val(),t=$("#userPassword").val(),i=$("#confirmPassword").val(),l=/^[a-zA-Z0-9._]{1,30}$/.test(s);0===s.length&&(o("userName"),$("#emptyFields").removeClass("hide"));l||0===s.length||(o("userName"),a("Usernames can only use letters, numbers, underscores and periods.","error"));0===r.length&&(o("userEmail"),$("#emptyFields").removeClass("hide"));0===t.length&&(o("userPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(o("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==t.length&&0!==i.length&&i!==t&&(o("confirmPassword"),$("#emptyFields").addClass("hide"),a("Confirm password doesn't match with password","error"),0!==r.length&&0!==s.length||$("#emptyFields").removeClass("hide"));0!==s.length&&0!==t.length&&0!==i.length&&0!==r.length&&t===i&&l&&$.post("/signup",{username:s,password:t,email:r}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?a(s[0].msg,"error"):a(s.msg,"error")}}).done(function(e){a(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",n),$("#changePassword").on("submit",function(e){e.preventDefault(),n();var s=$("#oldPassword").val(),r=$("#newPassword").val(),t=$("#confirmPassword").val();0===s.length&&(o("oldPassword"),$("#emptyFields").removeClass("hide"));0===r.length&&(o("newPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(o("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==r.length&&0!==t.length&&t!==r&&(o("confirmPassword"),$("#emptyFields").addClass("hide"),a("Confirm password doesn't match with the new password","error"),0===s.length&&$("#emptyFields").removeClass("hide"));0!==s.length&&0!==r.length&&0!==t.length&&r===t&&$.post("/user/changePassword",{oldPassword:s,newPassword:r}).fail(function(e){if(400===e.status){var s=e.responseJSON;a(s.msg,"error")}}).done(function(e){a(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#searchIcon").on("click",function(e){e.preventDefault(),$("#headerDiv").removeClass("show").addClass("hide"),$("#search").addClass("show"),$(".js-nonSearchView").addClass("hide"),$(".js-searchView").removeClass("hide")}),$(".js-search-close").on("click",function(e){e.preventDefault(),$("#search-text").val(""),$("#headerDiv").removeClass("hide").addClass("show"),$("#search").removeClass("show"),$(".js-nonSearchView").removeClass("hide"),$(".js-searchView").addClass("hide"),$(".js-searchView").empty()}),$(".menuDiv").on("click",function(e){e.preventDefault(),$("#user-menu").hasClass("show")?$("#user-menu").removeClass("show"):$("#user-menu").addClass("show")}),$(".trackList").on("click",function(s){$(".trackList").removeClass("highlight"),$(".trackItem").removeClass("fi-sound"),$(this).addClass("highlight"),$(this).find(".trackItem").addClass("fi-sound");var r=$(this).data("track-src");e.setSrc(r),e.load(),e.play()}),$("#search-text").on("keyup",function(e){13===e.keyCode&&r(e)}),$(".js-search-icon").on("click",r),$(document).on("click",".menuMode",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").addClass("show"),s.css("width","250px"),s.prepend('<div class="close-icon"><i class="fi-x"></i></div>')}),$(document).on("click",".close-icon",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").removeClass("show"),s.css("width","180px"),$(".close-icon").remove()});var s=null;function r(e){e.preventDefault(),$(".js-searchView").empty();var s=$.trim($("#search-text").val());(s=s.replace(/\s+/g," ")).length>0&&" "!==s&&(console.log("here"+s),$.post("/search/"+s).fail(function(e){console.log(e)}).done(function(e){console.log(e),$("#searchCont").html(e),$("#js-searchResults").removeClass("hide")}))}function n(){$("#error").empty(),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function a(e,s){var r=$("#msgcont");0===r.length&&(r=$("<ul id='msgcont'></ul>")),r.append("<li>"+e+"</li>"),$("#"+s).html(r)}function o(e){var s=$("#"+e),r=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");s.after(r)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
