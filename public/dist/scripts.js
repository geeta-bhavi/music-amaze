"use strict";$(function(){$(document).foundation(),$(".screenText").slick({dots:!0,infinite:!0,speed:500,fade:!0,cssEase:"linear"}),$(window).on("load resize",function(){$("#footer");$(".title-bar").is(":visible")?$("#index-menu").removeClass("addFloat"):$("#index-menu").addClass("addFloat");$(window).width()<400?($(".menuDiv").addClass("menuMode"),$("#user-menu").removeClass("show")):($("#user-menu").removeClass("show"),$("#user-menu").css("width","180px"),$(".close-icon").remove(),$(".menuDiv").removeClass("menuMode"))}),$("#login").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userPassword").val();if(0!==o.length&&0!==a.length){var i=/^[a-zA-Z0-9._]{1,30}$/.test(o);i?$.post("/login",{username:o,password:a}).fail(function(e){var s=e.responseJSON;400===e.status&&r(s[0].msg,"error"),401===e.status&&r(s.msg,"error")}).done(function(e){window.location.href="/user/home"}):(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"))}),$("#editProfile").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#email").val();if(0!==o.length&&0!==a.length){var i=/^[a-zA-Z0-9._]{1,30}$/.test(o);i?$.post("/user/editProfile",{username:o,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$("#loginLink").removeClass("hide"),$(".btns").addClass("hide")}):(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"))}else 0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide")),0==a.length&&(n("email"),$("#emptyFields").removeClass("hide"))}),$("#confirmUser").on("submit",function(o){o.preventDefault(),s();var a=$("#username").val();0!==a.length?$.post("/verifyUser",{username:a}).fail(function(e){if(401===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(s){$("#username").val(""),$("#forgotPassword").removeClass("hide"),$("#confirmUser").addClass("hide"),e=s}):0===a.length&&(n("username"),$("#emptyFields").removeClass("hide"))}),$("#forgotPassword").on("submit",function(o){o.preventDefault(),s();var a=$("#newPassword").val(),i=$("#confirmPassword").val();0===a.length&&(n("newPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&i!==a&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with the new password","error"));0!==a.length&&0!==i.length&&a===i&&$.post("/forgotPassword",{newPassword:a,user:e}).fail(function(e){if(400===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#signup").on("submit",function(e){e.preventDefault(),s();var o=$("#userName").val(),a=$("#userEmail").val(),i=$("#userPassword").val(),t=$("#confirmPassword").val(),l=/^[a-zA-Z0-9._]{1,30}$/.test(o);0===o.length&&(n("userName"),$("#emptyFields").removeClass("hide"));l||0===o.length||(n("userName"),r("Usernames can only use letters, numbers, underscores and periods.","error"));0===a.length&&(n("userEmail"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("userPassword"),$("#emptyFields").removeClass("hide"));0===t.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==i.length&&0!==t.length&&t!==i&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with password","error"),0!==a.length&&0!==o.length||$("#emptyFields").removeClass("hide"));0!==o.length&&0!==i.length&&0!==t.length&&0!==a.length&&i===t&&l&&$.post("/signup",{username:o,password:i,email:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;s.length>=1?r(s[0].msg,"error"):r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#reset").on("click",s),$("#changePassword").on("submit",function(e){e.preventDefault(),s();var o=$("#oldPassword").val(),a=$("#newPassword").val(),i=$("#confirmPassword").val();0===a.length&&(n("newPassword"),$("#emptyFields").removeClass("hide"));0===i.length&&(n("confirmPassword"),$("#emptyFields").removeClass("hide"));0!==a.length&&i!==a&&(n("confirmPassword"),$("#emptyFields").addClass("hide"),r("Confirm password doesn't match with the new password","error"));0!==a.length&&0!==i.length&&a===i&&$.post("/user/changePassword",{oldPassword:o,newPassword:a}).fail(function(e){if(400===e.status){var s=e.responseJSON;r(s.msg,"error")}}).done(function(e){r(e.msg,"msg"),$(".btns").addClass("hide"),$("#loginLink").removeClass("hide")})}),$("#searchIcon").on("click",function(e){e.preventDefault(),$("#headerDiv").removeClass("show").addClass("hide"),$("#search").addClass("show")}),$(".js-search-close").on("click",function(e){e.preventDefault(),$("#headerDiv").removeClass("hide").addClass("show"),$("#search").removeClass("show")}),$(".menuDiv").on("click",function(e){e.preventDefault(),$("#user-menu").hasClass("show")?$("#user-menu").removeClass("show"):$("#user-menu").addClass("show")}),$(document).on("click",".menuMode",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").addClass("show"),s.css("width","250px"),s.prepend('<div class="close-icon"><i class="fi-x"></i></div>')}),$(document).on("click",".close-icon",function(e){e.preventDefault();var s=$("#user-menu");$("#user-menu").removeClass("show"),s.css("width","180px"),$(".close-icon").remove()});var e=null;function s(){$("#error").empty(),$("#msg").empty(),$("#emptyFields").addClass("hide"),$(".icon-error").remove()}function r(e,s){var r=$("#msgcont");0===r.length&&(r=$("<ul id='msgcont'></ul>")),r.append("<li>"+e+"</li>"),$("#"+s).html(r)}function n(e){var s=$("#"+e),r=$("<span class='icon-error'><i class='fi-x-circle'></i></span>");s.after(r)}}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
